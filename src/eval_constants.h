#pragma once

int phase_values[6] = {0, 1, 1, 2, 4, 0};

const int material[6] = {S(99, 203), S(379, 361), S(402, 397), S(503, 722), S(1149, 1316), S(0, 0)};

int pst[6][64] = {
    // Pawn PST
    {S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),
     S(52, 223),  S(79, 204),  S(41, 175),  S(93, 131),  S(74, 147),  S(133, 125), S(-14, 202), S(-71, 248),
     S(-17, 80),  S(-23, 90),  S(6, 64),    S(14, 36),   S(53, 17),   S(57, 9),    S(6, 63),    S(-28, 66),
     S(-27, -12), S(-11, -28), S(-13, -45), S(9, -59),   S(-2, -61),  S(3, -56),   S(-9, -35),  S(-32, -35),
     S(-35, -41), S(-24, -49), S(-10, -71), S(2, -82),   S(0, -75),   S(5, -78),   S(-9, -60),  S(-37, -64),
     S(-38, -55), S(-25, -56), S(-25, -70), S(-20, -62), S(-21, -63), S(-2, -72),  S(8, -72),   S(-29, -75),
     S(-32, -43), S(-7, -57),  S(-22, -55), S(-14, -61), S(-21, -47), S(20, -68),  S(30, -70),  S(-23, -76),
     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0)},
    // Knight PST
    {S(-183, -24), S(-124, -12), S(-65, 15), S(-51, -17), S(48, -17), S(-92, -15), S(-48, -46), S(-102, -92),
     S(-83, -3),   S(-65, 21),   S(72, -19), S(9, 20),    S(17, 3),   S(70, -28),  S(0, -7),    S(-10, -43),
     S(-56, -5),   S(45, -8),    S(20, 35),  S(46, 28),   S(84, 9),   S(134, -4),  S(80, -19),  S(57, -45),
     S(-4, 1),     S(23, 15),    S(3, 49),   S(55, 41),   S(33, 43),  S(67, 29),   S(28, 18),   S(34, -2),
     S(-2, -1),    S(6, 7),      S(17, 37),  S(18, 45),   S(32, 36),  S(25, 33),   S(32, 15),   S(10, 2),
     S(-20, -7),   S(-8, 10),    S(8, 8),    S(13, 33),   S(23, 24),  S(22, 1),    S(25, -18),  S(-8, -6),
     S(-12, -23),  S(-35, -2),   S(-5, 8),   S(16, 7),    S(17, 13),  S(14, -7),   S(-6, -5),   S(0, -31),
     S(-112, 22),  S(-1, -18),   S(-42, -1), S(-20, 16),  S(9, -4),   S(-23, 6),   S(2, -21),   S(-8, -42)},
    // Bishop PST
    {S(-24, -13), S(-14, -14), S(-145, 17), S(-112, 14), S(-74, 16), S(-76, 6),  S(-28, 1),  S(9, -26),
     S(-45, 8),   S(-2, -2),   S(-42, 16),  S(-55, 0),   S(8, 1),    S(46, -12), S(8, -3),   S(-50, -5),
     S(-5, 4),    S(21, -8),   S(37, -5),   S(21, -6),   S(32, -6),  S(62, -2),  S(38, -1),  S(22, 2),
     S(-12, 2),   S(21, -2),   S(1, 14),    S(51, 8),    S(26, 13),  S(38, 5),   S(17, -6),  S(6, 9),
     S(0, -4),    S(10, 0),    S(15, 11),   S(25, 18),   S(39, 2),   S(5, 9),    S(12, -8),  S(14, -7),
     S(2, -5),    S(17, -1),   S(15, 11),   S(16, 13),   S(11, 16),  S(35, -4),  S(13, -6),  S(14, -6),
     S(14, -2),   S(25, -13),  S(21, -3),   S(4, 7),     S(15, 7),   S(16, -4),  S(42, -16), S(7, -20),
     S(-22, -4),  S(17, 6),    S(1, 1),     S(-8, 7),    S(-1, 3),   S(-8, 6),   S(-40, 10), S(-13, 1)},
    // Rook PST
    {S(6, 19),   S(20, 11),  S(-22, 31),  S(40, 7),   S(43, 9),   S(-14, 23), S(14, 11),  S(9, 10),
     S(-6, 21),  S(-6, 24),  S(29, 14),   S(38, 8),   S(64, -15), S(76, -10), S(-8, 23),  S(19, 10),
     S(-33, 21), S(-12, 19), S(-10, 16),  S(1, 11),   S(-18, 13), S(53, -13), S(76, -16), S(9, -2),
     S(-41, 17), S(-24, 9),  S(-19, 24),  S(1, 2),    S(-2, 6),   S(38, -2),  S(-5, 2),   S(-25, 15),
     S(-41, 11), S(-32, 13), S(-20, 12),  S(-7, -1),  S(0, -6),   S(1, -11),  S(23, -17), S(-25, -7),
     S(-34, -3), S(-19, -1), S(-10, -11), S(-11, -8), S(-2, -17), S(18, -25), S(10, -20), S(-17, -23),
     S(-31, -5), S(-10, -8), S(-17, -2),  S(-1, -3),  S(7, -16),  S(16, -19), S(11, -24), S(-53, 2),
     S(-4, -6),  S(-1, -2),  S(2, -1),    S(12, -11), S(10, -14), S(10, -15), S(-20, -5), S(-2, -28)},
    // Queen PST
    {S(-22, -29), S(-49, 57), S(-17, 41), S(-21, 41), S(117, -40), S(80, -20),  S(46, -3), S(42, 26),
     S(-41, -19), S(-65, 21), S(-33, 34), S(-35, 72), S(-78, 114), S(40, 28),   S(15, 25), S(53, -4),
     S(-5, -40),  S(-24, -5), S(5, -28),  S(-31, 72), S(19, 52),   S(68, 17),   S(59, 10), S(63, 7),
     S(-43, 17),  S(-21, 2),  S(-32, 11), S(-29, 38), S(-16, 63),  S(6, 46),    S(-9, 96), S(3, 59),
     S(-4, -37),  S(-38, 27), S(-3, -3),  S(-17, 37), S(-6, 20),   S(-1, 26),   S(-3, 53), S(-4, 48),
     S(-14, -17), S(12, -60), S(-6, -9),  S(10, -24), S(3, -17),   S(10, 5),    S(16, 10), S(10, 21),
     S(-24, -19), S(-1, -43), S(17, -48), S(14, -37), S(27, -49),  S(20, -49),  S(5, -61), S(15, -47),
     S(6, -49),   S(10, -65), S(8, -50),  S(16, -51), S(3, -31),   S(-17, -39), S(3, -64), S(-52, -50)},
    // King PST
    {S(-88, -103), S(145, -87), S(133, -60), S(97, -59), S(-92, 4),   S(-50, 26),  S(87, -25), S(78, -58),
     S(155, -63),  S(75, 9),    S(35, 19),   S(92, 10),  S(27, 26),   S(33, 48),   S(20, 26),  S(-119, 38),
     S(70, -11),   S(65, 20),   S(91, 27),   S(-14, 44), S(27, 38),   S(97, 53),   S(121, 37), S(1, 6),
     S(0, -22),    S(1, 32),    S(17, 43),   S(-34, 69), S(-37, 65),  S(-28, 60),  S(12, 32),  S(-64, 5),
     S(-49, -31),  S(16, -5),   S(-46, 48),  S(-93, 71), S(-109, 74), S(-63, 44),  S(-46, 15), S(-73, -15),
     S(13, -46),   S(10, -12),  S(-31, 26),  S(-68, 49), S(-63, 47),  S(-57, 33),  S(-10, 3),  S(-36, -19),
     S(0, -54),    S(17, -26),  S(-21, 11),  S(-66, 28), S(-49, 26),  S(-34, 11),  S(15, -18), S(11, -43),
     S(-28, -91),  S(40, -69),  S(14, -38),  S(-60, -5), S(-1, -39),  S(-46, -13), S(30, -54), S(16, -88)},
};
const int mobility[5][28] = {
    {S(-41, -65), S(-23, -15), S(-12, 3), S(-7, 11), S(3, 14), S(8, 23), S(16, 19), S(22, 19), S(40, -1), S(0, 0),
     S(0, 0),     S(0, 0),     S(0, 0),   S(0, 0),   S(0, 0),  S(0, 0),  S(0, 0),   S(0, 0),   S(0, 0),   S(0, 0),
     S(0, 0),     S(0, 0),     S(0, 0),   S(0, 0),   S(0, 0),  S(0, 0),  S(0, 0),   S(0, 0)},
    {S(-45, -69), S(-31, -43), S(-20, -24), S(-13, -10), S(-7, 0), S(-2, 7), S(2, 16), S(4, 18), S(7, 22), S(14, 20),
     S(29, 12),   S(42, 14),   S(-9, 42),   S(50, 8),    S(0, 0),  S(0, 0),  S(0, 0),  S(0, 0),  S(0, 0),  S(0, 0),
     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),  S(0, 0),  S(0, 0),  S(0, 0)},
    {S(-36, -72), S(-25, -45), S(-23, -18), S(-16, -15), S(-16, -6), S(-10, 5), S(-7, 14),
     S(-2, 12),   S(8, 14),    S(9, 18),    S(18, 18),   S(23, 22),  S(31, 22), S(30, 21),
     S(36, 19),   S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),    S(0, 0),   S(0, 0),
     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),    S(0, 0),   S(0, 0)},
    {S(-59, -51), S(-60, -70), S(-58, -85), S(-60, -72), S(-53, -76), S(-50, -55), S(-52, -31),
     S(-52, -12), S(-48, -9),  S(-46, 7),   S(-43, 18),  S(-39, 24),  S(-41, 36),  S(-32, 35),
     S(-31, 49),  S(-31, 60),  S(-30, 70),  S(-6, 41),   S(-13, 65),  S(15, 51),   S(12, 58),
     S(42, 40),   S(16, 67),   S(87, 37),   S(87, 12),   S(127, -4),  S(142, -11), S(304, -161)},
    {S(64, -6),   S(57, 15),  S(52, 11),   S(45, 10),  S(42, 2),    S(38, 5),   S(36, 0),
     S(29, -5),   S(22, 10),  S(14, 11),   S(-4, 18),  S(-18, 23),  S(-14, 19), S(-26, 21),
     S(-29, 20),  S(-42, 21), S(-38, 18),  S(-46, 18), S(-35, 10),  S(-32, 6),  S(-9, -5),
     S(-23, -10), S(-4, -19), S(-44, -22), S(22, -42), S(-29, -31), S(-5, -56), S(-42, -40)},
};

const int open_file[3]         = {S(53, 0), S(-8, 26), S(-53, 6)};
const int semi_open_file[3]    = {S(15, 18), S(-2, 26), S(-21, 25)};
const int attacked_by_pawn[2]  = {S(-70, -63), S(-54, -15)};
const int protected_by_pawn[6] = {S(13, 9), S(6, 17), S(1, 20), S(0, 15), S(-8, 22), S(-45, 14)};

const int bishop_pair  = S(27, 68);
const int doubled_pawn = S(-14, -44);
#pragma once

#include "types.h"

int phase_values[6] = {0, 1, 1, 2, 4, 0};

const int material[6] = {S(95, 202), S(380, 361), S(403, 398), S(504, 725), S(1150, 1323), S(0, 0)};

int pst[6][64] = {
    // Pawn PST
    {S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),
     S(54, 224),  S(82, 205),  S(46, 176),  S(99, 131),  S(76, 148),  S(140, 124), S(-9, 201),  S(-65, 249),
     S(-12, 81),  S(-21, 90),  S(9, 63),    S(18, 35),   S(58, 15),   S(62, 7),    S(9, 61),    S(-24, 67),
     S(-23, -12), S(-11, -29), S(-13, -45), S(10, -60),  S(-1, -63),  S(3, -58),   S(-7, -37),  S(-28, -34),
     S(-33, -42), S(-29, -50), S(-15, -71), S(-2, -80),  S(-4, -75),  S(4, -80),   S(-12, -63), S(-34, -65),
     S(-39, -54), S(-33, -54), S(-30, -68), S(-28, -58), S(-26, -61), S(-12, -69), S(0, -70),   S(-30, -74),
     S(-30, -39), S(-8, -51),  S(-21, -51), S(-10, -60), S(-19, -43), S(21, -64),  S(28, -64),  S(-21, -72),
     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0)},
    // Knight PST
    {S(-182, -27), S(-126, -11), S(-65, 15), S(-54, -15), S(51, -18), S(-91, -15), S(-48, -46), S(-103, -92),
     S(-84, -4),   S(-65, 22),   S(70, -18), S(9, 21),    S(17, 4),   S(68, -27),  S(0, -7),    S(-10, -45),
     S(-54, -7),   S(45, -7),    S(22, 36),  S(47, 29),   S(84, 11),  S(135, -5),  S(80, -18),  S(56, -45),
     S(-4, 2),     S(23, 15),    S(3, 49),   S(55, 41),   S(35, 43),  S(67, 28),   S(28, 18),   S(34, -1),
     S(-2, -1),    S(8, 6),      S(17, 38),  S(18, 45),   S(32, 36),  S(25, 33),   S(34, 15),   S(10, 2),
     S(-19, -7),   S(-7, 11),    S(9, 8),    S(14, 33),   S(24, 24),  S(23, 2),    S(26, -18),  S(-7, -7),
     S(-12, -23),  S(-35, -2),   S(-4, 9),   S(17, 7),    S(18, 13),  S(14, -6),   S(-5, -5),   S(1, -31),
     S(-112, 22),  S(-1, -18),   S(-41, -1), S(-20, 16),  S(11, -5),  S(-22, 6),   S(2, -22),   S(-7, -44)},
    // Bishop PST
    {S(-23, -13), S(-15, -13), S(-145, 17), S(-114, 15), S(-76, 18), S(-78, 8),  S(-30, 3),  S(12, -25),
     S(-47, 9),   S(-3, -1),   S(-42, 15),  S(-58, 1),   S(7, 2),    S(46, -11), S(5, -1),   S(-50, -7),
     S(-5, 4),    S(19, -6),   S(37, -4),   S(22, -5),   S(32, -4),  S(61, 0),   S(37, -1),  S(22, 2),
     S(-13, 4),   S(21, -2),   S(2, 14),    S(51, 8),    S(27, 13),  S(38, 6),   S(18, -6),  S(6, 10),
     S(0, -5),    S(10, -1),   S(15, 11),   S(24, 18),   S(39, 1),   S(5, 9),    S(13, -8),  S(17, -8),
     S(3, -5),    S(17, -1),   S(14, 11),   S(15, 13),   S(11, 16),  S(35, -4),  S(13, -6),  S(16, -7),
     S(14, -2),   S(25, -13),  S(21, -3),   S(4, 7),     S(16, 7),   S(16, -4),  S(43, -17), S(9, -22),
     S(-22, -4),  S(17, 7),    S(2, 1),     S(-8, 7),    S(0, 3),    S(-7, 7),   S(-39, 10), S(-11, 1)},
    // Rook PST
    {S(6, 19),   S(19, 11),  S(-21, 30),  S(40, 7),   S(43, 8),   S(-15, 22), S(15, 10),  S(10, 9),
     S(-5, 20),  S(-5, 23),  S(30, 13),   S(37, 9),   S(64, -15), S(75, -10), S(-7, 22),  S(19, 10),
     S(-32, 20), S(-12, 19), S(-9, 15),   S(0, 12),   S(-17, 13), S(53, -14), S(78, -17), S(12, -3),
     S(-39, 16), S(-23, 9),  S(-18, 24),  S(1, 3),    S(-2, 7),   S(39, -2),  S(-4, 3),   S(-23, 15),
     S(-41, 10), S(-32, 13), S(-21, 13),  S(-8, 1),   S(-1, -6),  S(1, -11),  S(24, -17), S(-24, -8),
     S(-34, -3), S(-19, -1), S(-11, -10), S(-10, -7), S(-4, -16), S(17, -25), S(9, -21),  S(-17, -23),
     S(-30, -5), S(-10, -8), S(-16, -2),  S(-1, -3),  S(8, -17),  S(17, -20), S(11, -25), S(-52, 1),
     S(-3, -6),  S(0, -3),   S(3, -1),    S(12, -11), S(10, -14), S(11, -16), S(-19, -6), S(-1, -29)},
    // Queen PST
    {S(-25, -28), S(-45, 52), S(-18, 41), S(-21, 41), S(117, -40), S(83, -23),  S(48, -5), S(39, 27),
     S(-42, -20), S(-68, 23), S(-34, 34), S(-36, 73), S(-79, 114), S(39, 26),   S(12, 26), S(53, -4),
     S(-7, -40),  S(-24, -5), S(4, -25),  S(-32, 73), S(18, 53),   S(66, 19),   S(57, 12), S(63, 6),
     S(-44, 16),  S(-22, 2),  S(-32, 12), S(-28, 38), S(-16, 64),  S(4, 47),    S(-8, 95), S(4, 57),
     S(-4, -37),  S(-39, 28), S(-3, -4),  S(-17, 37), S(-7, 21),   S(-1, 26),   S(-3, 52), S(-5, 47),
     S(-13, -20), S(12, -62), S(-7, -10), S(9, -25),  S(3, -18),   S(9, 5),     S(15, 11), S(9, 22),
     S(-24, -20), S(-2, -42), S(17, -48), S(14, -40), S(27, -51),  S(21, -50),  S(4, -60), S(17, -51),
     S(6, -50),   S(10, -66), S(8, -50),  S(16, -52), S(4, -33),   S(-17, -41), S(6, -66), S(-52, -51)},
    // King PST
    {S(-91, -102), S(140, -88), S(134, -61), S(94, -59), S(-95, 6),   S(-47, 26),  S(85, -25), S(77, -58),
     S(154, -64),  S(74, 9),    S(32, 19),   S(97, 7),   S(24, 27),   S(30, 48),   S(22, 24),  S(-121, 39),
     S(68, -10),   S(68, 18),   S(91, 26),   S(-10, 41), S(28, 37),   S(99, 51),   S(120, 37), S(0, 6),
     S(0, -22),    S(1, 32),    S(15, 43),   S(-32, 68), S(-35, 63),  S(-26, 58),  S(13, 31),  S(-64, 5),
     S(-48, -32),  S(17, -6),   S(-45, 47),  S(-93, 70), S(-111, 74), S(-63, 43),  S(-46, 15), S(-73, -17),
     S(10, -46),   S(8, -13),   S(-33, 26),  S(-68, 48), S(-64, 46),  S(-58, 32),  S(-12, 3),  S(-36, -21),
     S(1, -55),    S(18, -28),  S(-21, 10),  S(-65, 27), S(-48, 24),  S(-35, 10),  S(13, -19), S(11, -45),
     S(-27, -93),  S(41, -70),  S(14, -38),  S(-59, -6), S(-1, -39),  S(-46, -14), S(30, -55), S(17, -89)},
};
const int mobility[5][28] = {
    {S(-41, -64), S(-22, -13), S(-12, 4), S(-6, 11), S(4, 15), S(9, 23), S(16, 20), S(21, 19), S(40, -1), S(0, 0),
     S(0, 0),     S(0, 0),     S(0, 0),   S(0, 0),   S(0, 0),  S(0, 0),  S(0, 0),   S(0, 0),   S(0, 0),   S(0, 0),
     S(0, 0),     S(0, 0),     S(0, 0),   S(0, 0),   S(0, 0),  S(0, 0),  S(0, 0),   S(0, 0)},
    {S(-48, -66), S(-33, -41), S(-21, -24), S(-14, -10), S(-7, 0), S(-2, 7), S(2, 15), S(4, 17), S(7, 22), S(15, 19),
     S(30, 11),   S(42, 13),   S(-9, 42),   S(50, 7),    S(0, 0),  S(0, 0),  S(0, 0),  S(0, 0),  S(0, 0),  S(0, 0),
     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),  S(0, 0),  S(0, 0),  S(0, 0)},
    {S(-37, -71), S(-26, -44), S(-23, -18), S(-16, -16), S(-16, -6), S(-10, 5), S(-7, 14),
     S(-2, 12),   S(8, 14),    S(8, 18),    S(18, 17),   S(23, 22),  S(32, 21), S(30, 21),
     S(37, 18),   S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),    S(0, 0),   S(0, 0),
     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),    S(0, 0),   S(0, 0)},
    {S(-62, -47), S(-61, -67), S(-56, -84), S(-58, -70), S(-52, -74), S(-49, -55), S(-51, -31),
     S(-51, -14), S(-47, -10), S(-45, 6),   S(-42, 16),  S(-38, 22),  S(-40, 35),  S(-31, 34),
     S(-30, 47),  S(-30, 59),  S(-29, 69),  S(-5, 39),   S(-10, 63),  S(18, 49),   S(14, 56),
     S(42, 40),   S(16, 66),   S(91, 33),   S(87, 10),   S(134, -11), S(140, -11), S(289, -150)},
    {S(63, -4),   S(57, 17),  S(53, 12),   S(45, 10),  S(42, 3),    S(38, 6),   S(36, 0),
     S(29, -5),   S(22, 10),  S(15, 10),   S(-4, 18),  S(-16, 22),  S(-14, 19), S(-25, 20),
     S(-28, 20),  S(-41, 21), S(-37, 17),  S(-44, 17), S(-35, 10),  S(-32, 6),  S(-9, -5),
     S(-23, -10), S(-5, -19), S(-43, -22), S(23, -43), S(-29, -31), S(-8, -54), S(-41, -40)},
};

const int open_file[3]         = {S(54, 0), S(-8, 26), S(-53, 7)};
const int semi_open_file[3]    = {S(16, 18), S(-2, 24), S(-21, 25)};
const int attacked_by_pawn[2]  = {S(-70, -60), S(-54, -15)};
const int protected_by_pawn[6] = {S(22, 8), S(5, 18), S(1, 20), S(2, 13), S(-8, 22), S(-43, 13)};
const int phalanx_pawns[8] = {S(0, 0), S(7, -9), S(22, -1), S(27, 19), S(34, 66), S(112, 217), S(-138, 773), S(0, 0)};

const int bishop_pair  = S(28, 67);
const int doubled_pawn = S(-9, -44);
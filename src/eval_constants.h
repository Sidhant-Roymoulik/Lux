#pragma once

#include "types.h"

int phase_values[6] = {0, 1, 1, 2, 4, 0};

const int material[6] = {S(102, 176), S(378, 367), S(400, 405), S(500, 735), S(1141, 1345), S(0, 0)};

int pst[6][64] = {
    // Pawn PST
    {S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),
     S(70, 218),  S(94, 202),  S(61, 168),  S(118, 124), S(88, 145),  S(151, 119), S(5, 195),   S(-48, 245),
     S(-11, 41),  S(-18, 48),  S(11, 16),   S(22, -21),  S(60, -39),  S(71, -27),  S(17, 23),   S(-18, 25),
     S(-26, -14), S(-15, -30), S(-17, -49), S(6, -70),   S(-5, -57),  S(1, -56),   S(-11, -32), S(-32, -30),
     S(-39, -26), S(-36, -32), S(-22, -53), S(-9, -64),  S(-11, -57), S(-3, -62),  S(-18, -46), S(-41, -49),
     S(-44, -40), S(-39, -39), S(-36, -50), S(-34, -46), S(-32, -43), S(-18, -51), S(-5, -55),  S(-36, -56),
     S(-33, -27), S(-11, -39), S(-26, -35), S(-15, -46), S(-24, -27), S(17, -47),  S(25, -49),  S(-24, -56),
     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0)},
    // Knight PST
    {S(-181, -28), S(-125, -11), S(-64, 14), S(-53, -17), S(51, -20), S(-93, -14), S(-49, -45), S(-102, -93),
     S(-84, -4),   S(-64, 21),   S(71, -20), S(10, 21),   S(17, 2),   S(70, -30),  S(-1, -7),   S(-10, -45),
     S(-56, -5),   S(45, -7),    S(22, 33),  S(47, 27),   S(82, 11),  S(134, -5),  S(80, -19),  S(56, -46),
     S(-4, 3),     S(23, 15),    S(3, 48),   S(56, 40),   S(35, 42),  S(68, 27),   S(28, 18),   S(34, 0),
     S(-2, 0),     S(7, 6),      S(18, 36),  S(19, 44),   S(32, 36),  S(25, 33),   S(34, 15),   S(10, 5),
     S(-19, -5),   S(-7, 10),    S(9, 9),    S(15, 33),   S(24, 24),  S(23, 2),    S(26, -19),  S(-7, -5),
     S(-12, -21),  S(-35, 1),    S(-3, 8),   S(17, 6),    S(19, 12),  S(14, -5),   S(-5, -6),   S(2, -31),
     S(-113, 26),  S(0, -19),    S(-40, 0),  S(-19, 17),  S(11, -3),  S(-23, 7),   S(3, -22),   S(-7, -41)},
    // Bishop PST
    {S(-25, -13), S(-19, -12), S(-150, 20), S(-119, 17), S(-74, 14), S(-78, 9), S(-32, 4),  S(11, -24),
     S(-47, 11),  S(-4, -1),   S(-43, 15),  S(-56, 1),   S(8, 1),    S(44, -8), S(5, -2),   S(-50, -7),
     S(-5, 3),    S(19, -8),   S(37, -6),   S(22, -7),   S(31, -5),  S(62, -2), S(36, 1),   S(22, 1),
     S(-13, 4),   S(21, -2),   S(3, 12),    S(51, 7),    S(26, 13),  S(39, 5),  S(18, -7),  S(6, 11),
     S(1, -4),    S(10, 0),    S(15, 10),   S(25, 18),   S(40, 1),   S(5, 9),   S(12, -9),  S(16, -6),
     S(2, -3),    S(18, 0),    S(14, 11),   S(15, 13),   S(11, 16),  S(35, -5), S(13, -4),  S(16, -6),
     S(12, 1),    S(25, -12),  S(21, -2),   S(4, 7),     S(16, 7),   S(16, -4), S(43, -17), S(9, -21),
     S(-23, -2),  S(17, 8),    S(2, 2),     S(-8, 8),    S(-1, 4),   S(-7, 7),  S(-42, 15), S(-11, 0)},
    // Rook PST
    {S(6, 19),   S(20, 10),  S(-20, 30), S(41, 7),   S(44, 8),   S(-12, 22), S(11, 14),  S(9, 10),
     S(-4, 20),  S(-6, 23),  S(31, 12),  S(39, 8),   S(63, -14), S(73, -9),  S(-7, 22),  S(18, 11),
     S(-33, 21), S(-12, 20), S(-9, 15),  S(0, 13),   S(-15, 11), S(53, -13), S(79, -18), S(12, -4),
     S(-41, 19), S(-23, 11), S(-18, 24), S(1, 4),    S(-2, 8),   S(38, 0),   S(-3, 3),   S(-25, 18),
     S(-41, 12), S(-31, 14), S(-23, 16), S(-9, 1),   S(-2, -4),  S(0, -8),   S(25, -15), S(-24, -5),
     S(-34, 0),  S(-19, 1),  S(-12, -8), S(-10, -6), S(-5, -13), S(17, -24), S(9, -19),  S(-18, -20),
     S(-30, -3), S(-10, -8), S(-16, -2), S(0, -3),   S(8, -16),  S(17, -21), S(11, -24), S(-51, 1),
     S(-3, -7),  S(0, -4),   S(3, -2),   S(12, -11), S(10, -13), S(11, -15), S(-18, -5), S(-1, -29)},
    // Queen PST
    {S(-26, -26), S(-45, 51), S(-19, 41), S(-23, 44), S(119, -43), S(79, -20),  S(49, -8), S(39, 26),
     S(-43, -17), S(-67, 22), S(-34, 33), S(-35, 70), S(-77, 113), S(39, 25),   S(13, 26), S(53, -7),
     S(-6, -42),  S(-24, -6), S(5, -27),  S(-31, 71), S(17, 57),   S(65, 22),   S(57, 13), S(63, 4),
     S(-44, 17),  S(-21, 1),  S(-32, 11), S(-28, 35), S(-16, 62),  S(5, 45),    S(-8, 96), S(3, 61),
     S(-3, -36),  S(-38, 28), S(-3, -6),  S(-17, 35), S(-7, 20),   S(-1, 25),   S(-2, 52), S(-5, 47),
     S(-13, -18), S(12, -61), S(-7, -8),  S(10, -25), S(3, -16),   S(9, 3),     S(15, 11), S(9, 21),
     S(-24, -21), S(-1, -43), S(17, -49), S(15, -40), S(27, -51),  S(21, -52),  S(5, -63), S(17, -50),
     S(7, -54),   S(10, -67), S(8, -50),  S(16, -51), S(4, -32),   S(-16, -42), S(4, -63), S(-53, -47)},
    // King PST
    {S(-98, -107), S(143, -95), S(134, -67), S(88, -59), S(-101, 6),  S(-51, 23),  S(92, -37), S(66, -61),
     S(159, -74),  S(80, 5),    S(30, 16),   S(87, 10),  S(13, 31),   S(30, 44),   S(19, 20),  S(-115, 34),
     S(72, -15),   S(69, 14),   S(95, 23),   S(-17, 45), S(30, 37),   S(92, 55),   S(123, 33), S(-9, 4),
     S(6, -25),    S(-1, 31),   S(18, 42),   S(-35, 70), S(-42, 68),  S(-23, 58),  S(20, 29),  S(-65, 6),
     S(-43, -32),  S(21, -7),   S(-46, 48),  S(-97, 73), S(-112, 77), S(-67, 46),  S(-46, 16), S(-70, -17),
     S(14, -45),   S(14, -12),  S(-31, 28),  S(-65, 49), S(-65, 49),  S(-56, 34),  S(-11, 5),  S(-34, -19),
     S(3, -52),    S(19, -24),  S(-20, 13),  S(-64, 29), S(-46, 26),  S(-34, 13),  S(15, -17), S(13, -43),
     S(-24, -91),  S(43, -68),  S(16, -35),  S(-58, -4), S(0, -38),   S(-44, -13), S(32, -53), S(20, -87)},
};
const int mobility[5][28] = {
    {S(-40, -70), S(-22, -16), S(-12, 3), S(-6, 11), S(3, 15), S(8, 24), S(15, 21), S(20, 20), S(39, 1), S(0, 0),
     S(0, 0),     S(0, 0),     S(0, 0),   S(0, 0),   S(0, 0),  S(0, 0),  S(0, 0),   S(0, 0),   S(0, 0),  S(0, 0),
     S(0, 0),     S(0, 0),     S(0, 0),   S(0, 0),   S(0, 0),  S(0, 0),  S(0, 0),   S(0, 0)},
    {S(-47, -67), S(-31, -44), S(-20, -26), S(-13, -12), S(-6, 0), S(-1, 7), S(3, 16), S(5, 18), S(8, 22), S(15, 21),
     S(30, 12),   S(43, 15),   S(-12, 48),  S(48, 13),   S(0, 0),  S(0, 0),  S(0, 0),  S(0, 0),  S(0, 0),  S(0, 0),
     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),  S(0, 0),  S(0, 0),  S(0, 0)},
    {S(-37, -70), S(-25, -45), S(-22, -19), S(-15, -17), S(-15, -7), S(-9, 4), S(-7, 13), S(-1, 12), S(9, 14), S(9, 17),
     S(17, 19),   S(22, 24),   S(30, 24),   S(28, 24),   S(35, 21),  S(0, 0),  S(0, 0),   S(0, 0),   S(0, 0),  S(0, 0),
     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),    S(0, 0),  S(0, 0),   S(0, 0)},
    {S(-58, -56), S(-57, -76), S(-52, -90), S(-54, -77), S(-48, -80), S(-45, -62), S(-47, -38),
     S(-47, -19), S(-43, -15), S(-41, 2),   S(-38, 12),  S(-35, 18),  S(-37, 32),  S(-28, 30),
     S(-27, 43),  S(-26, 55),  S(-26, 66),  S(-2, 38),   S(-6, 59),   S(22, 46),   S(19, 52),
     S(46, 38),   S(18, 67),   S(96, 29),   S(94, 6),    S(144, -21), S(121, 14),  S(189, -52)},
    {S(65, -11),  S(59, 12),  S(54, 8),    S(47, 8),   S(44, 1),    S(39, 5),   S(38, 0),
     S(30, -5),   S(23, 9),   S(16, 11),   S(-3, 19),  S(-16, 24),  S(-15, 21), S(-25, 22),
     S(-29, 22),  S(-42, 22), S(-39, 18),  S(-47, 18), S(-37, 10),  S(-35, 6),  S(-12, -6),
     S(-22, -12), S(-9, -19), S(-42, -25), S(21, -43), S(-30, -33), S(-3, -53), S(-43, -43)},
};

const int passed_pawns[8]      = {S(0, 0), S(-3, -3), S(0, -3), S(1, 4), S(-3, 62), S(-6, 109), S(-34, 45), S(0, 0)};
const int phalanx_pawns[8]     = {S(0, 0), S(5, -3), S(21, 6), S(27, 20), S(34, 69), S(137, 177), S(16, 662), S(0, 0)};
const int protected_by_pawn[6] = {S(21, 13), S(5, 17), S(1, 20), S(3, 12), S(-8, 22), S(-41, 13)};
const int open_file[3]         = {S(54, -2), S(-8, 25), S(-52, 6)};
const int semi_open_file[3]    = {S(16, 18), S(-1, 23), S(-20, 24)};
const int attacked_by_pawn[2]  = {S(-70, -60), S(-54, -14)};

const int bishop_pair  = S(28, 67);
const int doubled_pawn = S(-10, -37);
#pragma once

#include "types.h"

int phase_values[6] = {0, 1, 1, 2, 4, 0};

const int material[6] = {S(72, 101), S(245, 247), S(236, 245), S(269, 392), S(546, 740), S(0, 0)};

int pst[6][64] = {
    // Pawn PST
    {S(0, 0),     S(0, 0),     S(0, 0),    S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),    S(0, 0),
     S(103, 301), S(154, 280), S(87, 257), S(152, 209), S(124, 225), S(184, 203), S(41, 276), S(-25, 329),
     S(7, 168),   S(14, 175),  S(46, 148), S(55, 122),  S(94, 100),  S(97, 91),   S(32, 148), S(-3, 150),
     S(0, 79),    S(28, 62),   S(25, 45),  S(44, 31),   S(35, 26),   S(36, 31),   S(32, 50),  S(-8, 54),
     S(-15, 55),  S(13, 43),   S(11, 24),  S(32, 17),   S(25, 22),   S(30, 14),   S(25, 32),  S(-10, 28),
     S(-13, 40),  S(10, 41),   S(11, 19),  S(6, 31),    S(8, 34),    S(25, 20),   S(51, 23),  S(3, 16),
     S(-24, 55),  S(15, 42),   S(-7, 42),  S(-9, 40),   S(-15, 49),  S(49, 25),   S(56, 29),  S(-7, 18),
     S(0, 0),     S(0, 0),     S(0, 0),    S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),    S(0, 0)},
    // Knight PST
    {S(-76, 81),  S(-12, 110), S(52, 141),  S(57, 110),  S(171, 106), S(18, 107),  S(76, 75),   S(3, 15),
     S(28, 118),  S(57, 144),  S(194, 112), S(140, 148), S(138, 133), S(189, 106), S(113, 117), S(102, 75),
     S(56, 119),  S(180, 120), S(152, 163), S(186, 157), S(217, 134), S(254, 127), S(197, 114), S(166, 82),
     S(105, 125), S(139, 153), S(135, 181), S(178, 175), S(161, 176), S(198, 158), S(142, 155), S(144, 123),
     S(106, 122), S(125, 141), S(134, 172), S(133, 183), S(153, 168), S(142, 171), S(139, 155), S(113, 120),
     S(97, 114),  S(110, 144), S(135, 143), S(131, 168), S(142, 161), S(142, 141), S(149, 122), S(104, 116),
     S(87, 93),   S(61, 124),  S(107, 135), S(118, 140), S(120, 144), S(139, 121), S(108, 116), S(105, 86),
     S(-13, 120), S(99, 78),   S(56, 122),  S(78, 132),  S(105, 117), S(89, 126),  S(104, 80),  S(101, 58)},
    // Bishop PST
    {S(108, 144), S(125, 145), S(-2, 170),  S(44, 170),  S(68, 173),  S(70, 163),  S(114, 152), S(129, 128),
     S(98, 159),  S(142, 160), S(103, 178), S(90, 161),  S(160, 160), S(175, 156), S(146, 161), S(82, 148),
     S(111, 170), S(159, 160), S(172, 167), S(170, 164), S(165, 165), S(189, 173), S(159, 171), S(127, 172),
     S(125, 163), S(138, 179), S(143, 187), S(185, 181), S(168, 187), S(172, 180), S(139, 171), S(128, 170),
     S(122, 159), S(144, 171), S(142, 186), S(155, 194), S(167, 178), S(142, 182), S(143, 163), S(134, 153),
     S(130, 149), S(147, 162), S(144, 180), S(146, 181), S(143, 187), S(162, 170), S(148, 160), S(142, 146),
     S(134, 148), S(148, 141), S(149, 157), S(128, 167), S(139, 171), S(151, 156), S(170, 144), S(134, 127),
     S(93, 136),  S(130, 156), S(115, 132), S(106, 160), S(118, 154), S(118, 142), S(80, 164),  S(105, 144)},
    // Rook PST
    {S(199, 364), S(215, 354), S(189, 368), S(238, 349), S(246, 349), S(181, 366), S(196, 359), S(202, 356),
     S(192, 360), S(191, 364), S(231, 352), S(235, 349), S(258, 327), S(266, 335), S(179, 365), S(215, 351),
     S(153, 362), S(174, 361), S(178, 357), S(188, 352), S(161, 356), S(233, 331), S(254, 329), S(193, 340),
     S(142, 357), S(158, 352), S(168, 364), S(187, 344), S(180, 349), S(218, 342), S(177, 344), S(160, 354),
     S(145, 348), S(148, 352), S(155, 354), S(172, 344), S(179, 336), S(183, 333), S(204, 326), S(170, 326),
     S(145, 336), S(161, 341), S(164, 334), S(159, 338), S(178, 328), S(196, 320), S(196, 321), S(170, 315),
     S(149, 335), S(170, 332), S(158, 341), S(169, 342), S(178, 328), S(205, 322), S(189, 320), S(129, 339),
     S(179, 335), S(175, 344), S(178, 347), S(192, 337), S(191, 334), S(202, 329), S(163, 339), S(184, 309)},
    // Queen PST
    {S(437, 606), S(429, 681), S(472, 656), S(461, 664), S(577, 601), S(546, 611), S(486, 648), S(503, 651),
     S(446, 586), S(425, 639), S(461, 655), S(452, 687), S(417, 727), S(527, 645), S(495, 655), S(525, 606),
     S(463, 581), S(455, 615), S(484, 609), S(463, 691), S(497, 680), S(543, 646), S(522, 639), S(533, 610),
     S(434, 629), S(441, 643), S(452, 640), S(453, 671), S(463, 701), S(483, 681), S(460, 717), S(466, 673),
     S(465, 581), S(437, 657), S(462, 637), S(458, 675), S(468, 655), S(468, 668), S(470, 674), S(469, 646),
     S(453, 600), S(479, 562), S(461, 627), S(472, 613), S(466, 621), S(474, 642), S(484, 638), S(476, 628),
     S(436, 586), S(466, 581), S(489, 562), S(476, 589), S(485, 588), S(493, 577), S(477, 559), S(481, 560),
     S(469, 568), S(458, 569), S(465, 578), S(487, 542), S(457, 604), S(444, 585), S(453, 565), S(427, 540)},
    // King PST
    {S(-133, -69), S(140, -70), S(127, -48), S(83, -44), S(-123, 22), S(-67, 41),  S(67, -6),  S(77, -40),
     S(163, -56),  S(67, 12),   S(26, 19),   S(100, 8),  S(27, 22),   S(27, 50),   S(-8, 35),  S(-129, 52),
     S(68, -3),    S(57, 22),   S(87, 18),   S(-6, 32),  S(24, 26),   S(92, 44),   S(111, 42), S(-3, 16),
     S(-10, -11),  S(-16, 36),  S(0, 41),    S(-40, 54), S(-38, 48),  S(-41, 55),  S(-7, 39),  S(-66, 15),
     S(-48, -23),  S(10, -4),   S(-59, 45),  S(-98, 61), S(-118, 66), S(-74, 44),  S(-57, 22), S(-67, -9),
     S(14, -37),   S(1, -7),    S(-37, 25),  S(-74, 47), S(-69, 48),  S(-62, 33),  S(-9, 7),   S(-25, -14),
     S(26, -51),   S(29, -26),  S(-8, 9),    S(-73, 32), S(-53, 29),  S(-20, 9),   S(29, -17), S(38, -42),
     S(6, -94),    S(59, -69),  S(27, -40),  S(-50, -6), S(20, -48),  S(-35, -16), S(48, -52), S(45, -87)},
};

const int bishop_pair = S(29, 61);

const int open_file[6]      = {S(0, 0), S(0, 0), S(0, 0), S(64, 6), S(-7, 45), S(-63, -2)};
const int semi_open_file[6] = {S(0, 0), S(0, 0), S(0, 0), S(21, 15), S(-2, 22), S(-31, 16)};
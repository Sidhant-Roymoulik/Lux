#pragma once

#include "types.h"

int phase_values[6] = {0, 1, 1, 2, 4, 0};

const int material[6] = {S(74, 101), S(172, 164), S(176, 162), S(198, 262), S(386, 489), S(0, 0)};

int pst[6][64] = {
    // Pawn PST
    {S(0, 0),    S(0, 0),     S(0, 0),    S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),    S(0, 0),
     S(86, 306), S(145, 284), S(86, 259), S(144, 214), S(124, 229), S(181, 206), S(39, 280), S(-41, 333),
     S(4, 169),  S(14, 177),  S(45, 150), S(49, 125),  S(90, 103),  S(92, 94),   S(34, 149), S(-9, 152),
     S(-2, 79),  S(32, 61),   S(22, 46),  S(45, 31),   S(37, 25),   S(35, 31),   S(34, 50),  S(-11, 54),
     S(-17, 55), S(14, 43),   S(19, 22),  S(35, 16),   S(30, 19),   S(35, 11),   S(26, 31),  S(-14, 29),
     S(-9, 39),  S(13, 40),   S(14, 20),  S(17, 27),   S(18, 29),   S(32, 16),   S(49, 23),  S(4, 16),
     S(-18, 53), S(25, 37),   S(-2, 38),  S(5, 37),    S(0, 46),    S(43, 25),   S(60, 24),  S(-6, 16),
     S(0, 0),    S(0, 0),     S(0, 0),    S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),    S(0, 0)},
    // Knight PST
    {S(-119, 31), S(-52, 54), S(-1, 91),   S(11, 59),   S(108, 58),  S(-25, 56),  S(34, 16),  S(-39, -37),
     S(-20, 63),  S(4, 95),   S(147, 58),  S(88, 94),   S(90, 78),   S(148, 51),  S(64, 67),  S(52, 22),
     S(10, 66),   S(126, 67), S(102, 110), S(132, 106), S(165, 84),  S(205, 77),  S(154, 57), S(114, 31),
     S(61, 72),   S(96, 97),  S(84, 128),  S(130, 122), S(110, 125), S(147, 106), S(99, 99),  S(98, 68),
     S(62, 66),   S(79, 86),  S(93, 116),  S(89, 128),  S(107, 113), S(98, 114),  S(93, 98),  S(69, 66),
     S(53, 58),   S(66, 88),  S(88, 88),   S(93, 108),  S(103, 103), S(101, 80),  S(101, 64), S(63, 57),
     S(51, 36),   S(25, 68),  S(65, 80),   S(83, 80),   S(85, 84),   S(87, 65),   S(60, 61),  S(64, 28),
     S(-49, 67),  S(66, 36),  S(22, 68),   S(41, 78),   S(68, 62),   S(44, 70),   S(68, 32),  S(48, 14)},
    // Bishop PST
    {S(65, 93),  S(76, 93),   S(-50, 118), S(-18, 117), S(22, 118),  S(30, 106),  S(66, 100),  S(93, 78),
     S(52, 112), S(88, 101),  S(53, 116),  S(37, 99),   S(104, 98),  S(133, 92),  S(99, 102),  S(36, 98),
     S(63, 115), S(109, 100), S(120, 100), S(114, 97),  S(113, 98),  S(134, 107), S(113, 107), S(86, 114),
     S(78, 106), S(97, 111),  S(89, 119),  S(135, 110), S(116, 116), S(115, 113), S(97, 103),  S(88, 111),
     S(86, 100), S(99, 106),  S(96, 115),  S(109, 121), S(117, 104), S(94, 110),  S(96, 97),   S(99, 99),
     S(94, 95),  S(107, 101), S(106, 112), S(99, 111),  S(99, 118),  S(121, 99),  S(105, 101), S(103, 92),
     S(98, 98),  S(117, 86),  S(107, 95),  S(90, 105),  S(100, 105), S(107, 97),  S(132, 85),  S(92, 81),
     S(69, 95),  S(98, 106),  S(93, 97),   S(78, 107),  S(86, 106),  S(85, 102),  S(46, 114),  S(74, 98)},
    // Rook PST
    {S(145, 242), S(157, 234), S(126, 249), S(178, 230), S(180, 232), S(119, 248), S(135, 240), S(142, 235),
     S(132, 243), S(126, 248), S(169, 235), S(173, 232), S(199, 210), S(209, 215), S(121, 247), S(151, 235),
     S(92, 246),  S(114, 243), S(114, 240), S(124, 236), S(100, 240), S(169, 215), S(192, 212), S(126, 227),
     S(87, 241),  S(99, 235),  S(108, 246), S(125, 227), S(119, 232), S(157, 225), S(115, 228), S(100, 238),
     S(91, 234),  S(97, 235),  S(108, 235), S(118, 226), S(127, 217), S(127, 215), S(144, 211), S(109, 214),
     S(98, 221),  S(111, 224), S(120, 215), S(119, 218), S(131, 209), S(145, 201), S(137, 206), S(114, 204),
     S(104, 220), S(123, 216), S(117, 223), S(129, 224), S(138, 209), S(151, 205), S(138, 204), S(81, 227),
     S(133, 218), S(131, 222), S(137, 222), S(145, 214), S(143, 212), S(148, 208), S(112, 220), S(135, 197)},
    // Queen PST
    {S(299, 391), S(272, 472), S(308, 448), S(304, 448), S(426, 383), S(399, 394), S(355, 424), S(370, 430),
     S(289, 393), S(261, 427), S(298, 439), S(286, 475), S(254, 509), S(366, 428), S(338, 435), S(371, 412),
     S(306, 381), S(293, 403), S(316, 385), S(282, 476), S(326, 460), S(371, 425), S(362, 421), S(373, 415),
     S(276, 431), S(286, 415), S(283, 419), S(281, 441), S(294, 466), S(313, 449), S(301, 495), S(313, 468),
     S(313, 377), S(276, 441), S(308, 404), S(295, 443), S(304, 423), S(310, 434), S(310, 461), S(313, 453),
     S(302, 405), S(327, 352), S(309, 405), S(324, 380), S(317, 393), S(323, 416), S(329, 433), S(322, 440),
     S(292, 399), S(321, 373), S(338, 358), S(333, 373), S(345, 364), S(339, 369), S(328, 349), S(332, 379),
     S(328, 371), S(325, 353), S(327, 366), S(337, 363), S(317, 394), S(299, 383), S(319, 358), S(277, 360)},
    // King PST
    {S(-142, -78), S(153, -82), S(151, -60), S(95, -53), S(-100, 8),  S(-47, 28),  S(79, -19), S(99, -58),
     S(177, -68),  S(82, 7),    S(41, 16),   S(112, 5),  S(33, 23),   S(44, 45),   S(19, 26),  S(-119, 42),
     S(82, -14),   S(68, 18),   S(99, 22),   S(0, 39),   S(40, 33),   S(109, 48),  S(129, 36), S(7, 7),
     S(7, -21),    S(4, 32),    S(17, 44),   S(-39, 70), S(-36, 63),  S(-28, 59),  S(5, 35),   S(-58, 6),
     S(-43, -30),  S(24, -7),   S(-44, 47),  S(-94, 71), S(-111, 76), S(-59, 44),  S(-41, 16), S(-66, -14),
     S(9, -41),    S(7, -10),   S(-31, 27),  S(-58, 47), S(-58, 48),  S(-52, 32),  S(-7, 5),   S(-31, -16),
     S(11, -53),   S(26, -26),  S(-8, 8),    S(-58, 28), S(-39, 24),  S(-23, 9),   S(24, -18), S(18, -42),
     S(-18, -92),  S(47, -69),  S(23, -39),  S(-48, -7), S(9, -41),   S(-36, -14), S(37, -52), S(25, -87)},
};

const int bishop_pair = S(26, 61);

const int open_file[6]      = {S(0, 0), S(0, 0), S(0, 0), S(51, -3), S(-8, 20), S(-51, 1)};
const int semi_open_file[6] = {S(0, 0), S(0, 0), S(0, 0), S(11, 10), S(-3, 13), S(-21, 15)};

const int mobility[5][28] = {
    {S(109, 55),  S(115, 137), S(119, 138), S(121, 140), S(127, 134), S(125, 140), S(124, 139),
     S(127, 141), S(129, 134), S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),
     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),
     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0)},
    {S(77, 55),   S(91, 81),   S(101, 95),  S(105, 110), S(108, 123), S(115, 132), S(120, 139),
     S(121, 146), S(124, 152), S(128, 149), S(130, 153), S(136, 149), S(127, 156), S(151, 152),
     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),
     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0)},
    {S(121, 156), S(127, 186), S(130, 211), S(135, 217), S(136, 225), S(139, 231), S(144, 237),
     S(148, 240), S(148, 247), S(152, 249), S(159, 250), S(163, 251), S(169, 256), S(183, 255),
     S(159, 260), S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),
     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0)},
    {S(338, 389), S(336, 363), S(336, 348), S(334, 330), S(339, 337), S(342, 352), S(339, 359),
     S(337, 393), S(339, 387), S(342, 403), S(345, 403), S(343, 428), S(339, 442), S(346, 449),
     S(349, 458), S(347, 464), S(354, 466), S(360, 471), S(368, 475), S(363, 489), S(370, 491),
     S(384, 482), S(386, 507), S(431, 468), S(447, 452), S(433, 497), S(625, 322), S(591, 364)},
    {S(41, -16), S(34, 8),   S(30, 4),    S(24, 4),    S(22, -3),   S(19, 1),   S(19, -5),
     S(13, -14), S(4, 6),    S(-1, 2),    S(-17, 12),  S(-18, 10),  S(-32, 15), S(-31, 14),
     S(-55, 21), S(-57, 19), S(-61, 18),  S(-61, 17),  S(-47, 13),  S(-71, 14), S(-55, 8),
     S(-42, 2),  S(-58, -1), S(-31, -17), S(-59, -10), S(-25, -29), S(18, -51), S(0, -49)},
};
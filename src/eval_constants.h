#pragma once

#include "types.h"

int phase_values[6] = {0, 1, 1, 2, 4, 0};

const int material[6] = {S(72, 101), S(245, 247), S(236, 245), S(269, 392), S(546, 740), S(0, 0)};

int pst[6][64] = {
    // Pawn PST
    {S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),
     S(57, 255),  S(108, 234), S(41, 211),  S(106, 163), S(78, 179),  S(138, 157), S(-5, 230),  S(-71, 283),
     S(-39, 122), S(-32, 129), S(0, 102),   S(9, 76),    S(48, 54),   S(51, 45),   S(-14, 102), S(-49, 104),
     S(-46, 33),  S(-18, 16),  S(-21, -1),  S(-2, -15),  S(-11, -20), S(-10, -15), S(-14, 4),   S(-54, 8),
     S(-61, 9),   S(-33, -3),  S(-35, -22), S(-14, -29), S(-21, -24), S(-16, -32), S(-21, -14), S(-56, -18),
     S(-59, -6),  S(-36, -5),  S(-35, -27), S(-40, -15), S(-38, -12), S(-21, -26), S(5, -23),   S(-43, -30),
     S(-70, 9),   S(-31, -4),  S(-53, -4),  S(-55, -6),  S(-61, 3),   S(3, -21),   S(10, -17),  S(-53, -28),
     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0)},
    // Knight PST
    {S(-196, -39), S(-132, -10), S(-68, 21), S(-63, -10), S(51, -14), S(-102, -13), S(-44, -45), S(-117, -105),
     S(-92, -2),   S(-63, 24),   S(74, -8),  S(20, 28),   S(18, 13),  S(69, -14),   S(-7, -3),   S(-18, -45),
     S(-64, -1),   S(60, 0),     S(32, 43),  S(66, 37),   S(97, 14),  S(134, 7),    S(77, -6),   S(46, -38),
     S(-15, 5),    S(19, 33),    S(15, 61),  S(58, 55),   S(41, 56),  S(78, 38),    S(22, 35),   S(24, 3),
     S(-14, 2),    S(5, 21),     S(14, 52),  S(13, 63),   S(33, 48),  S(22, 51),    S(19, 35),   S(-7, 0),
     S(-23, -6),   S(-10, 24),   S(15, 23),  S(11, 48),   S(22, 41),  S(22, 21),    S(29, 2),    S(-16, -4),
     S(-33, -27),  S(-59, 4),    S(-13, 15), S(-2, 20),   S(0, 24),   S(19, 1),     S(-12, -4),  S(-15, -34),
     S(-133, 0),   S(-21, -42),  S(-64, 2),  S(-42, 12),  S(-15, -3), S(-31, 6),    S(-16, -40), S(-19, -62)},
    // Bishop PST
    {S(-38, -2),  S(-21, -1), S(-148, 24), S(-102, 24), S(-78, 27), S(-76, 17), S(-32, 6),  S(-17, -18),
     S(-48, 13),  S(-4, 14),  S(-43, 32),  S(-56, 15),  S(14, 14),  S(29, 10),  S(0, 15),   S(-64, 2),
     S(-35, 24),  S(13, 14),  S(26, 21),   S(24, 18),   S(19, 19),  S(43, 27),  S(13, 25),  S(-19, 26),
     S(-21, 17),  S(-8, 33),  S(-3, 41),   S(39, 35),   S(22, 41),  S(26, 34),  S(-7, 25),  S(-18, 24),
     S(-24, 13),  S(-2, 25),  S(-4, 40),   S(9, 48),    S(21, 32),  S(-4, 36),  S(-3, 17),  S(-12, 7),
     S(-16, 3),   S(1, 16),   S(-2, 34),   S(0, 35),    S(-3, 41),  S(16, 24),  S(2, 14),   S(-4, 0),
     S(-12, 2),   S(2, -5),   S(3, 11),    S(-18, 21),  S(-7, 25),  S(5, 10),   S(24, -2),  S(-12, -19),
     S(-53, -10), S(-16, 10), S(-31, -14), S(-40, 14),  S(-28, 8),  S(-28, -4), S(-66, 18), S(-41, -2)},
    // Rook PST
    {S(-65, 100), S(-49, 90),  S(-75, 104), S(-26, 85),  S(-18, 85),  S(-83, 102), S(-68, 95),  S(-62, 92),
     S(-72, 96),  S(-73, 100), S(-33, 88),  S(-29, 85),  S(-6, 63),   S(2, 71),    S(-85, 101), S(-49, 87),
     S(-111, 98), S(-90, 97),  S(-86, 93),  S(-76, 88),  S(-103, 92), S(-31, 67),  S(-10, 65),  S(-71, 76),
     S(-122, 93), S(-106, 88), S(-96, 100), S(-77, 80),  S(-84, 85),  S(-46, 78),  S(-87, 80),  S(-104, 90),
     S(-119, 84), S(-116, 88), S(-109, 90), S(-92, 80),  S(-85, 72),  S(-81, 69),  S(-60, 62),  S(-94, 62),
     S(-119, 72), S(-103, 77), S(-100, 70), S(-105, 74), S(-86, 64),  S(-68, 56),  S(-68, 57),  S(-94, 51),
     S(-115, 71), S(-94, 68),  S(-106, 77), S(-95, 78),  S(-86, 64),  S(-59, 58),  S(-75, 56),  S(-135, 75),
     S(-85, 71),  S(-89, 80),  S(-86, 83),  S(-72, 73),  S(-73, 70),  S(-62, 65),  S(-101, 75), S(-80, 45)},
    // Queen PST
    {S(-111, 58), S(-119, 133), S(-76, 108), S(-87, 116), S(29, 53),    S(-2, 63),   S(-62, 100), S(-45, 103),
     S(-102, 38), S(-123, 91),  S(-87, 107), S(-96, 139), S(-131, 179), S(-21, 97),  S(-53, 107), S(-23, 58),
     S(-85, 33),  S(-93, 67),   S(-64, 61),  S(-85, 143), S(-51, 132),  S(-5, 98),   S(-26, 91),  S(-15, 62),
     S(-114, 81), S(-107, 95),  S(-96, 92),  S(-95, 123), S(-85, 153),  S(-65, 133), S(-88, 169), S(-82, 125),
     S(-83, 33),  S(-111, 109), S(-86, 89),  S(-90, 127), S(-80, 107),  S(-80, 120), S(-78, 126), S(-79, 98),
     S(-95, 52),  S(-69, 14),   S(-87, 79),  S(-76, 65),  S(-82, 73),   S(-74, 94),  S(-64, 90),  S(-72, 80),
     S(-112, 38), S(-82, 33),   S(-59, 14),  S(-72, 41),  S(-63, 40),   S(-55, 29),  S(-71, 11),  S(-67, 12),
     S(-79, 20),  S(-90, 21),   S(-83, 30),  S(-61, -6),  S(-91, 56),   S(-104, 37), S(-95, 17),  S(-121, -8)},
    // King PST
    {S(-134, -70), S(139, -71), S(126, -49), S(82, -45), S(-124, 21), S(-68, 40),  S(66, -7),  S(76, -41),
     S(162, -57),  S(66, 11),   S(25, 18),   S(99, 7),   S(26, 21),   S(26, 49),   S(-9, 34),  S(-130, 51),
     S(67, -4),    S(56, 21),   S(86, 17),   S(-7, 31),  S(23, 25),   S(91, 43),   S(110, 41), S(-4, 15),
     S(-11, -12),  S(-17, 35),  S(-1, 40),   S(-41, 53), S(-39, 47),  S(-42, 54),  S(-8, 38),  S(-67, 14),
     S(-49, -24),  S(9, -5),    S(-60, 44),  S(-99, 60), S(-119, 65), S(-75, 43),  S(-58, 21), S(-68, -10),
     S(13, -38),   S(0, -8),    S(-38, 24),  S(-75, 46), S(-70, 47),  S(-63, 32),  S(-10, 6),  S(-26, -15),
     S(25, -52),   S(28, -27),  S(-9, 8),    S(-74, 31), S(-54, 28),  S(-21, 8),   S(28, -18), S(37, -43),
     S(5, -95),    S(58, -70),  S(26, -41),  S(-51, -7), S(19, -49),  S(-36, -17), S(47, -53), S(44, -88)},
};

const int bishop_pair = S(29, 61);

const int open_file[6]      = {S(0, 0), S(0, 0), S(0, 0), S(64, 6), S(-7, 45), S(-63, -2)};
const int semi_open_file[6] = {S(0, 0), S(0, 0), S(0, 0), S(21, 15), S(-2, 22), S(-31, 16)};
#pragma once

#include "types.h"

int phase_values[6] = {0, 1, 1, 2, 4, 0};

const int material[6] = {S(103, 190), S(371, 357), S(389, 391), S(486, 716), S(1102, 1315), S(0, 0)};

int pst[6][64] = {
    // Pawn PST
    {S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),    S(0, 0),
     S(49, 218),  S(109, 195), S(47, 170),  S(100, 128), S(84, 141),  S(146, 118), S(6, 190),  S(-74, 244),
     S(-26, 80),  S(-22, 89),  S(5, 63),    S(11, 38),   S(54, 16),   S(58, 6),    S(4, 60),   S(-36, 62),
     S(-35, -8),  S(-8, -26),  S(-14, -42), S(9, -58),   S(-2, -63),  S(2, -57),   S(-7, -36), S(-41, -34),
     S(-44, -35), S(-23, -45), S(-15, -66), S(0, -74),   S(-4, -70),  S(2, -77),   S(-8, -57), S(-43, -60),
     S(-40, -49), S(-17, -50), S(-21, -68), S(-16, -62), S(-14, -60), S(-1, -72),  S(17, -66), S(-28, -72),
     S(-44, -37), S(-5, -52),  S(-30, -52), S(-20, -54), S(-27, -43), S(14, -64),  S(31, -65), S(-32, -74),
     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),    S(0, 0)},
    // Knight PST
    {S(-182, -25), S(-114, -13), S(-67, 15), S(-54, -17), S(46, -18), S(-84, -20), S(-36, -49), S(-99, -94),
     S(-83, -1),   S(-62, 21),   S(73, -19), S(12, 17),   S(13, 4),   S(72, -26),  S(2, -6),    S(-10, -42),
     S(-58, -6),   S(47, -9),    S(14, 39),  S(47, 31),   S(80, 11),  S(119, 4),   S(72, -17),  S(50, -42),
     S(-6, 2),     S(19, 20),    S(6, 52),   S(53, 45),   S(35, 46),  S(65, 31),   S(23, 23),   S(32, -1),
     S(-2, -2),    S(7, 9),      S(16, 39),  S(19, 49),   S(32, 36),  S(26, 38),   S(30, 19),   S(9, 3),
     S(-13, -8),   S(-5, 10),    S(13, 11),  S(15, 32),   S(27, 26),  S(27, 3),    S(31, -12),  S(-3, -3),
     S(-14, -25),  S(-37, -4),   S(-4, 4),   S(19, 3),    S(20, 8),   S(16, -10),  S(-4, -5),   S(0, -33),
     S(-113, 13),  S(0, -21),    S(-43, -2), S(-20, 13),  S(7, -6),   S(-23, 4),   S(4, -24),   S(-9, -38)},
    // Bishop PST
    {S(-23, -13), S(-14, -12), S(-141, 15), S(-104, 11), S(-67, 12), S(-60, 0),  S(-27, -4), S(5, -28),
     S(-36, 6),   S(-1, -3),   S(-37, 13),  S(-51, -3),  S(15, -4),  S(44, -11), S(7, -1),   S(-48, -5),
     S(-28, 12),  S(16, -4),   S(31, -1),   S(21, -3),   S(20, -2),  S(41, 7),   S(21, 5),   S(-7, 11),
     S(-13, 2),   S(12, 6),    S(0, 18),    S(49, 10),   S(27, 16),  S(28, 13),  S(12, -2),  S(0, 9),
     S(2, -5),    S(10, 3),    S(12, 14),   S(23, 21),   S(34, 6),   S(6, 10),   S(11, -5),  S(15, -6),
     S(6, -8),    S(21, -1),   S(18, 11),   S(17, 11),   S(14, 19),  S(37, -1),  S(16, -1),  S(17, -7),
     S(17, -4),   S(29, -17),  S(22, -5),   S(6, 3),     S(18, 3),   S(20, -6),  S(45, -18), S(10, -22),
     S(-17, -6),  S(18, 5),    S(5, -4),    S(-8, 4),    S(-2, 2),   S(-2, 1),   S(-40, 10), S(-10, -3)},
    // Rook PST
    {S(7, 18),   S(20, 10),  S(-12, 25), S(41, 6),   S(45, 7),   S(-16, 23), S(5, 14),   S(6, 11),
     S(-4, 19),  S(-6, 23),  S(36, 10),  S(42, 6),   S(66, -15), S(76, -9),  S(-10, 23), S(19, 10),
     S(-37, 21), S(-14, 20), S(-13, 16), S(4, 10),   S(-24, 14), S(45, -10), S(68, -14), S(-1, 2),
     S(-44, 17), S(-26, 11), S(-17, 23), S(-1, 3),   S(-3, 7),   S(30, 1),   S(-10, 5),  S(-29, 15),
     S(-39, 9),  S(-30, 11), S(-20, 11), S(-8, 2),   S(0, -7),   S(-1, -8),  S(18, -12), S(-23, -8),
     S(-33, -4), S(-18, -1), S(-9, -11), S(-11, -7), S(1, -15),  S(18, -24), S(10, -18), S(-17, -21),
     S(-29, -6), S(-8, -11), S(-13, -4), S(1, -4),   S(9, -18),  S(19, -20), S(8, -23),  S(-51, 1),
     S(0, -9),   S(2, -6),   S(7, -5),   S(15, -12), S(13, -15), S(15, -19), S(-19, -7), S(2, -30)},
    // Queen PST
    {S(-20, -28), S(-52, 58), S(-12, 34), S(-19, 37), S(108, -33), S(73, -16),  S(37, 7),   S(50, 14),
     S(-31, -26), S(-62, 15), S(-25, 29), S(-34, 65), S(-71, 105), S(47, 17),   S(13, 28),  S(55, -6),
     S(-11, -33), S(-25, -5), S(2, -24),  S(-29, 67), S(13, 52),   S(63, 16),   S(43, 16),  S(56, 5),
     S(-43, 17),  S(-27, 7),  S(-32, 12), S(-31, 37), S(-17, 64),  S(-1, 48),   S(-13, 93), S(-3, 63),
     S(-1, -39),  S(-40, 31), S(-5, -1),  S(-17, 37), S(-7, 20),   S(-4, 32),   S(-5, 61),  S(-2, 44),
     S(-13, -14), S(11, -57), S(-7, -7),  S(9, -23),  S(1, -10),   S(8, 12),    S(12, 24),  S(8, 26),
     S(-19, -25), S(4, -46),  S(23, -57), S(20, -47), S(33, -56),  S(24, -51),  S(13, -69), S(18, -49),
     S(13, -55),  S(14, -68), S(14, -54), S(24, -62), S(6, -33),   S(-13, -39), S(6, -67),  S(-40, -60)},
    // King PST
    {S(-135, -83), S(150, -82), S(143, -60), S(93, -53), S(-102, 8),  S(-58, 28),  S(87, -25), S(87, -58),
     S(172, -69),  S(80, 7),    S(41, 17),   S(104, 7),  S(28, 24),   S(36, 45),   S(16, 25),  S(-119, 38),
     S(77, -16),   S(64, 19),   S(86, 26),   S(-15, 43), S(26, 37),   S(99, 50),   S(121, 35), S(6, 4),
     S(2, -23),    S(-2, 32),   S(4, 46),    S(-43, 70), S(-39, 62),  S(-38, 60),  S(-2, 34),  S(-62, 4),
     S(-45, -32),  S(17, -7),   S(-52, 47),  S(-98, 70), S(-115, 74), S(-70, 44),  S(-52, 16), S(-70, -16),
     S(5, -41),    S(1, -10),   S(-42, 28),  S(-70, 48), S(-70, 49),  S(-62, 33),  S(-15, 5),  S(-38, -17),
     S(5, -53),    S(21, -27),  S(-14, 8),   S(-61, 26), S(-43, 23),  S(-28, 9),   S(18, -19), S(15, -44),
     S(-21, -94),  S(45, -70),  S(21, -40),  S(-50, -8), S(7, -42),   S(-39, -15), S(35, -54), S(21, -87)},
};

const int bishop_pair = S(25, 63);

const int open_file[6]      = {S(0, 0), S(0, 0), S(0, 0), S(52, -2), S(-10, 24), S(-55, 3)};
const int semi_open_file[6] = {S(0, 0), S(0, 0), S(0, 0), S(11, 12), S(-4, 19), S(-24, 15)};

const int mobility[5][28] = {
    {S(-35, -66), S(-20, -16), S(-11, 4), S(-7, 11), S(3, 15), S(7, 24), S(14, 20), S(18, 19), S(33, -1), S(0, 0),
     S(0, 0),     S(0, 0),     S(0, 0),   S(0, 0),   S(0, 0),  S(0, 0),  S(0, 0),   S(0, 0),   S(0, 0),   S(0, 0),
     S(0, 0),     S(0, 0),     S(0, 0),   S(0, 0),   S(0, 0),  S(0, 0),  S(0, 0),   S(0, 0)},
    {S(-48, -69), S(-33, -43), S(-20, -26), S(-13, -10), S(-7, 2), S(-2, 10), S(2, 18), S(4, 19), S(7, 24), S(14, 19),
     S(28, 12),   S(42, 11),   S(-7, 42),   S(49, 6),    S(0, 0),  S(0, 0),   S(0, 0),  S(0, 0),  S(0, 0),  S(0, 0),
     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),  S(0, 0),   S(0, 0),  S(0, 0)},
    {S(-33, -73), S(-23, -44), S(-20, -19), S(-15, -14), S(-14, -6), S(-8, 5), S(-6, 14), S(-1, 12), S(9, 14), S(9, 18),
     S(17, 18),   S(23, 22),   S(28, 25),   S(27, 22),   S(27, 23),  S(0, 0),  S(0, 0),   S(0, 0),   S(0, 0),  S(0, 0),
     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),    S(0, 0),  S(0, 0),   S(0, 0)},
    {S(-60, -48), S(-62, -72), S(-60, -83), S(-61, -74), S(-55, -75), S(-52, -56), S(-53, -33),
     S(-54, -8),  S(-49, -9),  S(-47, 8),   S(-44, 20),  S(-41, 27),  S(-42, 38),  S(-32, 35),
     S(-31, 49),  S(-30, 59),  S(-29, 70),  S(-8, 42),   S(-15, 67),  S(12, 54),   S(4, 66),
     S(43, 38),   S(15, 68),   S(83, 38),   S(36, 58),   S(130, -8),  S(234, -94), S(288, -145)},
    {S(59, -9),  S(52, 13),  S(47, 10),   S(41, 10),  S(38, 1),    S(34, 4),   S(32, 1),
     S(24, -4),  S(18, 11),  S(10, 12),   S(-8, 18),  S(-21, 23),  S(-17, 19), S(-30, 22),
     S(-32, 22), S(-46, 23), S(-39, 19),  S(-47, 19), S(-34, 12),  S(-29, 7),  S(-5, -5),
     S(-20, -9), S(8, -21),  S(-34, -23), S(35, -42), S(-18, -33), S(1, -52),  S(-36, -40)},
};
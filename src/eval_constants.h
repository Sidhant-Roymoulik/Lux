#pragma once

#include "types.h"

int phase_values[6] = {0, 1, 1, 2, 4, 0};

const int material[6] = {S(102, 203), S(378, 360), S(399, 395), S(499, 721), S(1139, 1312), S(0, 0)};

int pst[6][64] = {
    // Pawn PST
    {S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),
     S(45, 221),  S(76, 203),  S(35, 175),  S(90, 129),  S(71, 146),  S(131, 124), S(-18, 200), S(-72, 245),
     S(-23, 80),  S(-23, 90),  S(1, 64),    S(8, 37),    S(48, 18),   S(54, 8),    S(4, 62),    S(-33, 65),
     S(-30, -10), S(-11, -27), S(-14, -44), S(8, -58),   S(-5, -62),  S(2, -57),   S(-10, -35), S(-37, -34),
     S(-38, -39), S(-23, -47), S(-10, -69), S(5, -77),   S(1, -71),   S(8, -79),   S(-9, -58),  S(-37, -62),
     S(-34, -52), S(-15, -52), S(-16, -69), S(-11, -63), S(-9, -62),  S(8, -71),   S(19, -68),  S(-22, -73),
     S(-37, -41), S(-5, -55),  S(-25, -53), S(-14, -59), S(-22, -45), S(20, -66),  S(32, -68),  S(-26, -76),
     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0)},
    // Knight PST
    {S(-182, -26), S(-123, -12), S(-67, 14), S(-53, -18), S(52, -21), S(-90, -18), S(-44, -50), S(-100, -93),
     S(-81, -4),   S(-62, 19),   S(71, -20), S(6, 20),    S(15, 3),   S(67, -27),  S(2, -7),    S(-8, -45),
     S(-55, -7),   S(47, -7),    S(20, 38),  S(47, 31),   S(85, 11),  S(134, -1),  S(80, -17),  S(54, -44),
     S(-5, 1),     S(21, 20),    S(4, 54),   S(54, 46),   S(34, 48),  S(65, 34),   S(27, 22),   S(31, -1),
     S(-2, 0),     S(8, 8),      S(16, 40),  S(20, 50),   S(32, 39),  S(26, 39),   S(34, 19),   S(11, 3),
     S(-16, -7),   S(-7, 12),    S(10, 12),  S(15, 33),   S(27, 27),  S(25, 6),    S(29, -12),  S(-5, -4),
     S(-13, -26),  S(-37, -2),   S(-6, 6),   S(16, 4),    S(17, 9),   S(13, -8),   S(-4, -7),   S(0, -33),
     S(-115, 18),  S(-2, -21),   S(-42, -4), S(-22, 14),  S(8, -6),   S(-24, 4),   S(1, -25),   S(-11, -40)},
    // Bishop PST
    {S(-26, -13), S(-15, -13), S(-143, 15), S(-114, 13), S(-71, 13), S(-70, 4),  S(-33, -1), S(7, -28),
     S(-42, 7),   S(-3, -2),   S(-41, 15),  S(-56, -1),  S(10, -2),  S(43, -12), S(7, -2),   S(-49, -6),
     S(-7, 3),    S(21, -6),   S(38, -3),   S(23, -4),   S(28, -2),  S(61, 2),   S(37, 2),   S(22, 0),
     S(-11, 0),   S(19, 3),    S(2, 19),    S(51, 12),   S(26, 19),  S(37, 10),  S(16, -1),  S(5, 8),
     S(2, -6),    S(9, 4),     S(14, 14),   S(26, 22),   S(38, 6),   S(5, 13),   S(12, -3),  S(16, -8),
     S(4, -7),    S(18, 0),    S(16, 13),   S(16, 13),   S(13, 21),  S(36, -1),  S(14, -1),  S(14, -6),
     S(15, -5),   S(25, -16),  S(20, -5),   S(4, 3),     S(15, 4),   S(18, -6),  S(41, -18), S(8, -22),
     S(-21, -7),  S(17, 5),    S(1, -1),    S(-8, 4),    S(-3, 2),   S(-7, 3),   S(-41, 8),  S(-14, -1)},
    // Rook PST
    {S(6, 19),   S(18, 11),  S(-18, 28), S(39, 6),   S(41, 9),   S(-14, 22), S(9, 13),   S(13, 8),
     S(-4, 20),  S(-5, 24),  S(33, 12),  S(40, 8),   S(66, -16), S(77, -10), S(-7, 23),  S(19, 10),
     S(-34, 21), S(-12, 20), S(-11, 16), S(2, 11),   S(-20, 13), S(51, -12), S(76, -16), S(6, -1),
     S(-41, 16), S(-25, 11), S(-18, 24), S(0, 3),    S(-3, 8),   S(37, -1),  S(-7, 4),   S(-27, 16),
     S(-39, 10), S(-29, 12), S(-20, 13), S(-6, 1),   S(1, -6),   S(2, -7),   S(22, -14), S(-22, -8),
     S(-33, -3), S(-20, -1), S(-9, -11), S(-10, -8), S(0, -15),  S(20, -24), S(11, -18), S(-17, -21),
     S(-30, -6), S(-11, -8), S(-16, -4), S(0, -4),   S(7, -17),  S(17, -21), S(10, -25), S(-53, 1),
     S(-3, -8),  S(-1, -5),  S(3, -3),   S(13, -13), S(11, -15), S(12, -16), S(-19, -7), S(-2, -29)},
    // Queen PST
    {S(-20, -32), S(-48, 55), S(-16, 39), S(-25, 43), S(113, -38), S(71, -15),  S(48, -6),  S(49, 16),
     S(-39, -20), S(-61, 17), S(-29, 32), S(-34, 69), S(-76, 111), S(40, 25),   S(14, 24),  S(56, -9),
     S(-5, -42),  S(-24, -6), S(3, -27),  S(-31, 71), S(17, 52),   S(65, 18),   S(57, 11),  S(62, 5),
     S(-43, 16),  S(-23, 3),  S(-33, 14), S(-30, 39), S(-17, 65),  S(5, 47),    S(-10, 95), S(3, 56),
     S(-3, -41),  S(-39, 29), S(-4, -2),  S(-19, 41), S(-7, 21),   S(-3, 31),   S(-3, 57),  S(-4, 50),
     S(-16, -15), S(8, -53),  S(-8, -6),  S(6, -19),  S(0, -9),    S(6, 13),    S(10, 24),  S(4, 27),
     S(-22, -24), S(1, -46),  S(19, -54), S(17, -45), S(30, -55),  S(23, -52),  S(6, -64),  S(18, -49),
     S(8, -54),   S(12, -68), S(10, -53), S(18, -55), S(5, -34),   S(-16, -39), S(7, -67),  S(-47, -54)},
    // King PST
    {S(-83, -105), S(151, -87), S(140, -63), S(97, -58), S(-94, 5),   S(-41, 22),  S(89, -25), S(79, -56),
     S(163, -65),  S(76, 9),    S(38, 19),   S(96, 9),   S(22, 27),   S(31, 48),   S(18, 26),  S(-120, 39),
     S(72, -14),   S(62, 20),   S(88, 26),   S(-19, 45), S(25, 37),   S(91, 54),   S(115, 37), S(5, 4),
     S(-1, -23),   S(-5, 34),   S(10, 45),   S(-41, 70), S(-49, 66),  S(-38, 61),  S(0, 34),   S(-64, 4),
     S(-49, -32),  S(14, -6),   S(-52, 48),  S(-99, 71), S(-116, 75), S(-69, 44),  S(-54, 17), S(-71, -16),
     S(12, -46),   S(3, -12),   S(-42, 28),  S(-71, 48), S(-71, 49),  S(-62, 33),  S(-17, 5),  S(-36, -20),
     S(3, -54),    S(18, -27),  S(-18, 10),  S(-60, 26), S(-44, 23),  S(-31, 9),   S(15, -19), S(14, -44),
     S(-22, -93),  S(44, -72),  S(18, -40),  S(-54, -7), S(4, -41),   S(-41, -16), S(34, -56), S(21, -89)},
};
const int mobility[5][28] = {
    {S(-42, -64), S(-24, -13), S(-13, 4), S(-7, 12), S(3, 15), S(9, 23), S(17, 19), S(22, 18), S(40, -4), S(0, 0),
     S(0, 0),     S(0, 0),     S(0, 0),   S(0, 0),   S(0, 0),  S(0, 0),  S(0, 0),   S(0, 0),   S(0, 0),   S(0, 0),
     S(0, 0),     S(0, 0),     S(0, 0),   S(0, 0),   S(0, 0),  S(0, 0),  S(0, 0),   S(0, 0)},
    {S(-49, -70), S(-34, -42), S(-21, -24), S(-13, -9), S(-7, 3), S(-2, 10), S(2, 18), S(4, 19), S(7, 25), S(13, 19),
     S(27, 11),   S(40, 10),   S(-10, 38),  S(48, 3),   S(0, 0),  S(0, 0),   S(0, 0),  S(0, 0),  S(0, 0),  S(0, 0),
     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),    S(0, 0),  S(0, 0),   S(0, 0),  S(0, 0)},
    {S(-36, -74), S(-25, -44), S(-23, -18), S(-17, -14), S(-16, -6), S(-10, 5), S(-7, 14),
     S(-2, 13),   S(9, 14),    S(9, 18),    S(18, 18),   S(23, 22),  S(30, 23), S(29, 21),
     S(33, 20),   S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),    S(0, 0),   S(0, 0),
     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),    S(0, 0),   S(0, 0)},
    {S(-61, -43), S(-63, -67), S(-61, -84), S(-63, -75), S(-56, -77), S(-53, -56), S(-54, -31),
     S(-54, -10), S(-49, -7),  S(-47, 9),   S(-44, 19),  S(-40, 26),  S(-42, 38),  S(-33, 38),
     S(-31, 50),  S(-31, 61),  S(-31, 72),  S(-7, 42),   S(-14, 67),  S(15, 53),   S(12, 58),
     S(40, 41),   S(20, 63),   S(89, 32),   S(92, 6),    S(135, -15), S(144, -15), S(303, -163)},
    {S(59, -10),  S(51, 12),  S(46, 10),   S(39, 10),  S(37, 2),    S(33, 5),   S(32, 1),
     S(24, -4),   S(17, 11),  S(10, 11),   S(-8, 19),  S(-21, 23),  S(-18, 20), S(-30, 22),
     S(-31, 21),  S(-45, 22), S(-40, 19),  S(-46, 19), S(-35, 11),  S(-32, 7),  S(-7, -5),
     S(-19, -10), S(2, -20),  S(-37, -23), S(33, -44), S(-19, -33), S(7, -58),  S(-27, -43)},
};

const int open_file[3]        = {S(53, -1), S(-8, 26), S(-55, 5)};
const int semi_open_file[3]   = {S(15, 16), S(-3, 24), S(-23, 21)};
const int attacked_by_pawn[2] = {S(-67, -61), S(-53, -14)};

const int bishop_pair  = S(28, 66);
const int doubled_pawn = S(-26, -54);
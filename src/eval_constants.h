#pragma once

#include "types.h"

int phase_values[6] = {0, 1, 1, 2, 4, 0};

const int material[6] = {S(103, 205), S(378, 361), S(401, 395), S(500, 721), S(1141, 1312), S(0, 0)};

int pst[6][64] = {
    // Pawn PST
    {S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),
     S(46, 222),  S(75, 202),  S(33, 175),  S(87, 130),  S(69, 146),  S(127, 124), S(-19, 201), S(-74, 246),
     S(-23, 79),  S(-24, 90),  S(1, 64),    S(10, 36),   S(48, 17),   S(54, 9),    S(4, 63),    S(-33, 65),
     S(-29, -12), S(-11, -26), S(-12, -44), S(9, -58),   S(-2, -60),  S(2, -55),   S(-10, -33), S(-36, -35),
     S(-37, -40), S(-22, -46), S(-11, -69), S(5, -80),   S(1, -73),   S(9, -76),   S(-8, -57),  S(-36, -63),
     S(-34, -55), S(-16, -54), S(-17, -70), S(-11, -64), S(-9, -62),  S(7, -72),   S(19, -69),  S(-23, -75),
     S(-37, -42), S(-5, -55),  S(-26, -53), S(-14, -59), S(-22, -46), S(20, -66),  S(32, -68),  S(-26, -76),
     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0)},
    // Knight PST
    {S(-182, -27), S(-124, -14), S(-67, 14), S(-54, -18), S(48, -20), S(-92, -17), S(-45, -49), S(-103, -93),
     S(-83, -4),   S(-64, 20),   S(71, -20), S(7, 18),    S(16, 1),   S(67, -29),  S(0, -8),    S(-10, -45),
     S(-55, -7),   S(47, -8),    S(19, 36),  S(47, 30),   S(85, 10),  S(133, -2),  S(80, -19),  S(54, -45),
     S(-6, 1),     S(23, 19),    S(5, 53),   S(54, 45),   S(34, 47),  S(66, 33),   S(28, 22),   S(32, -2),
     S(-1, -1),    S(8, 8),      S(17, 40),  S(20, 49),   S(33, 38),  S(27, 37),   S(34, 19),   S(11, 2),
     S(-15, -7),   S(-6, 11),    S(11, 11),  S(15, 32),   S(28, 27),  S(26, 5),    S(30, -13),  S(-4, -4),
     S(-13, -27),  S(-36, -3),   S(-5, 5),   S(17, 3),    S(18, 9),   S(14, -9),   S(-5, -7),   S(1, -34),
     S(-114, 17),  S(-2, -21),   S(-43, -4), S(-21, 13),  S(8, -7),   S(-23, 3),   S(1, -24),   S(-10, -42)},
    // Bishop PST
    {S(-27, -14), S(-17, -14), S(-145, 15), S(-113, 11), S(-74, 13), S(-73, 4),  S(-36, 1),  S(5, -28),
     S(-44, 7),   S(-4, -1),   S(-43, 15),  S(-58, -1),  S(8, -1),   S(41, -12), S(5, -2),   S(-50, -7),
     S(-7, 3),    S(20, -6),   S(36, -2),   S(23, -3),   S(27, -2),  S(59, 2),   S(36, 2),   S(20, 0),
     S(-13, 1),   S(19, 3),    S(0, 19),    S(50, 13),   S(25, 20),  S(36, 10),  S(16, -1),  S(3, 7),
     S(1, -6),    S(9, 5),     S(14, 14),   S(25, 23),   S(38, 6),   S(4, 13),   S(11, -3),  S(15, -9),
     S(3, -6),    S(18, 1),    S(15, 13),   S(15, 13),   S(12, 21),  S(36, -1),  S(13, 0),   S(14, -6),
     S(14, -5),   S(24, -15),  S(20, -5),   S(3, 4),     S(14, 4),   S(16, -6),  S(41, -17), S(7, -24),
     S(-23, -7),  S(16, 3),    S(0, -2),    S(-9, 5),    S(-3, 2),   S(-8, 3),   S(-40, 7),  S(-13, -1)},
    // Rook PST
    {S(6, 19),   S(20, 10),  S(-20, 30), S(40, 6),   S(43, 8),   S(-13, 21), S(10, 11),  S(13, 8),
     S(-4, 20),  S(-6, 24),  S(32, 12),  S(41, 6),   S(66, -15), S(79, -11), S(-8, 24),  S(19, 10),
     S(-35, 21), S(-11, 19), S(-11, 16), S(1, 12),   S(-19, 13), S(51, -12), S(76, -15), S(7, -1),
     S(-42, 17), S(-25, 11), S(-19, 25), S(0, 3),    S(-3, 8),   S(38, -1),  S(-6, 4),   S(-26, 15),
     S(-40, 10), S(-30, 12), S(-20, 12), S(-6, 1),   S(1, -6),   S(3, -9),   S(22, -14), S(-23, -8),
     S(-33, -3), S(-19, -1), S(-9, -11), S(-10, -8), S(0, -15),  S(19, -24), S(11, -18), S(-17, -21),
     S(-30, -6), S(-11, -9), S(-16, -4), S(-1, -4),  S(8, -18),  S(18, -21), S(10, -25), S(-52, 1),
     S(-3, -7),  S(-1, -4),  S(3, -3),   S(13, -13), S(11, -15), S(12, -16), S(-19, -6), S(-1, -29)},
    // Queen PST
    {S(-21, -30), S(-50, 56), S(-14, 37), S(-24, 41), S(116, -41), S(73, -17),  S(45, -3),  S(45, 21),
     S(-40, -20), S(-63, 19), S(-30, 32), S(-35, 70), S(-79, 114), S(39, 27),   S(13, 25),  S(56, -8),
     S(-5, -42),  S(-25, -5), S(2, -25),  S(-32, 71), S(18, 51),   S(65, 16),   S(57, 10),  S(62, 6),
     S(-43, 16),  S(-23, 4),  S(-34, 15), S(-30, 40), S(-17, 65),  S(5, 45),    S(-10, 95), S(3, 55),
     S(-2, -40),  S(-39, 30), S(-4, -2),  S(-19, 40), S(-7, 21),   S(-4, 32),   S(-3, 57),  S(-4, 47),
     S(-15, -15), S(8, -54),  S(-8, -6),  S(6, -20),  S(0, -10),   S(6, 14),    S(10, 23),  S(5, 28),
     S(-21, -24), S(1, -47),  S(19, -54), S(17, -44), S(30, -55),  S(23, -52),  S(7, -64),  S(17, -48),
     S(9, -54),   S(12, -68), S(10, -53), S(19, -55), S(4, -33),   S(-15, -41), S(4, -64),  S(-48, -51)},
    // King PST
    {S(-87, -104), S(149, -86), S(139, -62), S(99, -60),  S(-92, 4),   S(-43, 23),  S(89, -25), S(80, -58),
     S(158, -64),  S(76, 9),    S(38, 19),   S(96, 9),    S(24, 26),   S(30, 48),   S(18, 26),  S(-116, 37),
     S(72, -13),   S(62, 20),   S(87, 27),   S(-20, 45),  S(23, 38),   S(94, 52),   S(116, 37), S(5, 4),
     S(1, -24),    S(-5, 33),   S(11, 44),   S(-42, 70),  S(-50, 67),  S(-37, 60),  S(1, 34),   S(-63, 4),
     S(-46, -33),  S(13, -6),   S(-51, 48),  S(-100, 71), S(-115, 74), S(-71, 45),  S(-55, 17), S(-69, -17),
     S(14, -47),   S(3, -11),   S(-41, 28),  S(-72, 48),  S(-72, 49),  S(-63, 33),  S(-18, 5),  S(-35, -20),
     S(5, -55),    S(19, -27),  S(-18, 10),  S(-61, 26),  S(-44, 23),  S(-31, 9),   S(15, -19), S(14, -44),
     S(-22, -94),  S(44, -71),  S(18, -40),  S(-54, -7),  S(4, -41),   S(-41, -16), S(34, -57), S(22, -89)},
};
const int mobility[5][28] = {
    {S(-41, -63), S(-23, -14), S(-12, 4), S(-7, 11), S(4, 14), S(9, 23), S(17, 19), S(22, 18), S(41, -3), S(0, 0),
     S(0, 0),     S(0, 0),     S(0, 0),   S(0, 0),   S(0, 0),  S(0, 0),  S(0, 0),   S(0, 0),   S(0, 0),   S(0, 0),
     S(0, 0),     S(0, 0),     S(0, 0),   S(0, 0),   S(0, 0),  S(0, 0),  S(0, 0),   S(0, 0)},
    {S(-48, -67), S(-33, -40), S(-21, -22), S(-13, -8), S(-7, 3), S(-2, 11), S(2, 19), S(4, 20), S(7, 24), S(13, 19),
     S(27, 11),   S(39, 10),   S(-7, 38),   S(47, 3),   S(0, 0),  S(0, 0),   S(0, 0),  S(0, 0),  S(0, 0),  S(0, 0),
     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),    S(0, 0),  S(0, 0),   S(0, 0),  S(0, 0)},
    {S(-36, -73), S(-25, -44), S(-23, -18), S(-18, -14), S(-17, -5), S(-11, 5), S(-8, 14),
     S(-3, 13),   S(8, 14),    S(8, 18),    S(17, 18),   S(22, 23),  S(30, 23), S(28, 22),
     S(33, 19),   S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),    S(0, 0),   S(0, 0),
     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),    S(0, 0),   S(0, 0)},
    {S(-59, -44), S(-61, -67), S(-59, -84), S(-61, -73), S(-55, -76), S(-51, -54), S(-53, -30),
     S(-53, -10), S(-48, -7),  S(-46, 9),   S(-43, 20),  S(-40, 27),  S(-41, 39),  S(-32, 38),
     S(-31, 51),  S(-31, 62),  S(-30, 72),  S(-6, 41),   S(-13, 67),  S(16, 51),   S(12, 58),
     S(41, 40),   S(21, 62),   S(88, 34),   S(92, 7),    S(135, -15), S(146, -16), S(304, -165)},
    {S(59, -10),  S(51, 12),  S(46, 11),   S(39, 11),  S(37, 3),    S(33, 6),   S(32, 2),
     S(24, -4),   S(17, 12),  S(9, 12),    S(-8, 19),  S(-21, 24),  S(-18, 20), S(-30, 22),
     S(-32, 21),  S(-45, 22), S(-40, 18),  S(-46, 18), S(-35, 11),  S(-30, 6),  S(-6, -6),
     S(-18, -11), S(3, -20),  S(-36, -23), S(33, -44), S(-17, -34), S(7, -58),  S(-26, -44)},
};

const int open_file[3]        = {S(53, 0), S(-8, 27), S(-55, 6)};
const int semi_open_file[3]   = {S(15, 19), S(-2, 28), S(-22, 25)};
const int attacked_by_pawn[2] = {S(-67, -62), S(-53, -15)};

const int bishop_pair  = S(27, 67);
const int doubled_pawn = S(-20, -48);
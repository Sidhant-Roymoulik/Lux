#pragma once

#include "types.h"

int phase_values[6] = {0, 1, 1, 2, 4, 0};

const int material[6] = {S(98, 192), S(373, 358), S(391, 391), S(489, 715), S(1107, 1315), S(0, 0)};

int pst[6][64] = {
    // Pawn PST
    {S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),
     S(47, 219),  S(73, 204),  S(41, 170),  S(93, 128),  S(73, 144),  S(133, 121), S(-16, 195), S(-76, 245),
     S(-24, 79),  S(-21, 88),  S(3, 63),    S(9, 38),    S(52, 16),   S(56, 6),    S(7, 59),    S(-34, 62),
     S(-31, -10), S(-9, -27),  S(-13, -43), S(6, -57),   S(-6, -61),  S(3, -58),   S(-8, -36),  S(-38, -35),
     S(-40, -36), S(-20, -46), S(-11, -68), S(4, -75),   S(0, -71),   S(7, -79),   S(-6, -58),  S(-38, -62),
     S(-37, -50), S(-13, -52), S(-17, -69), S(-12, -63), S(-10, -61), S(3, -73),   S(21, -68),  S(-25, -73),
     S(-39, -39), S(-1, -53),  S(-24, -54), S(-14, -56), S(-22, -45), S(19, -66),  S(35, -66),  S(-28, -76),
     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0)},
    // Knight PST
    {S(-182, -26), S(-121, -13), S(-68, 14), S(-53, -17), S(46, -19), S(-87, -20), S(-48, -46), S(-100, -94),
     S(-82, -2),   S(-63, 20),   S(72, -21), S(7, 17),    S(15, 2),   S(67, -25),  S(1, -7),    S(-9, -43),
     S(-54, -8),   S(45, -8),    S(20, 35),  S(47, 29),   S(85, 9),   S(130, -1),  S(78, -18),  S(54, -42),
     S(-5, 2),     S(22, 19),    S(4, 51),   S(54, 43),   S(34, 46),  S(66, 31),   S(27, 22),   S(32, -1),
     S(-2, -2),    S(7, 8),      S(16, 38),  S(20, 47),   S(33, 36),  S(27, 37),   S(34, 19),   S(11, 2),
     S(-16, -8),   S(-7, 10),    S(11, 10),  S(14, 31),   S(27, 25),  S(26, 3),    S(29, -12),  S(-4, -4),
     S(-14, -26),  S(-35, -5),   S(-7, 3),   S(17, 2),    S(17, 8),   S(14, -11),  S(-5, -6),   S(-1, -34),
     S(-112, 11),  S(-2, -21),   S(-44, -3), S(-22, 13),  S(6, -7),   S(-25, 4),   S(2, -24),   S(-10, -38)},
    // Bishop PST
    {S(-28, -11), S(-17, -12), S(-142, 15), S(-111, 12), S(-73, 13), S(-67, 2),  S(-34, -1), S(2, -27),
     S(-40, 7),   S(-2, -2),   S(-40, 14),  S(-59, -1),  S(11, -4),  S(43, -11), S(5, -1),   S(-50, -5),
     S(-6, 3),    S(21, -6),   S(37, -3),   S(23, -4),   S(30, -4),  S(60, 2),   S(38, 1),   S(22, 1),
     S(-13, 2),   S(19, 4),    S(2, 18),    S(52, 10),   S(27, 18),  S(37, 12),  S(15, -1),  S(4, 10),
     S(0, -5),    S(10, 3),    S(14, 13),   S(26, 21),   S(39, 5),   S(4, 13),   S(12, -4),  S(16, -6),
     S(4, -8),    S(17, 0),    S(16, 12),   S(15, 12),   S(12, 20),  S(36, -1),  S(13, -1),  S(15, -6),
     S(14, -4),   S(25, -16),  S(20, -5),   S(3, 3),     S(14, 4),   S(18, -6),  S(41, -16), S(7, -21),
     S(-20, -6),  S(17, 5),    S(1, -2),    S(-9, 4),    S(-3, 3),   S(-7, 3),   S(-41, 10), S(-12, -3)},
    // Rook PST
    {S(5, 19),   S(19, 11),  S(-15, 27), S(40, 7),   S(46, 7),   S(-14, 24), S(5, 15),   S(7, 11),
     S(-4, 20),  S(-7, 25),  S(33, 12),  S(41, 7),   S(66, -14), S(75, -8),  S(-11, 24), S(18, 11),
     S(-37, 22), S(-12, 20), S(-10, 16), S(3, 12),   S(-17, 13), S(49, -10), S(72, -13), S(1, 3),
     S(-44, 18), S(-23, 11), S(-17, 24), S(1, 4),    S(-3, 9),   S(35, 2),   S(-8, 6),   S(-28, 16),
     S(-40, 11), S(-28, 12), S(-18, 12), S(-5, 2),   S(3, -6),   S(2, -7),   S(22, -12), S(-23, -6),
     S(-32, -3), S(-18, 0),  S(-8, -10), S(-9, -7),  S(1, -14),  S(20, -23), S(10, -16), S(-18, -20),
     S(-30, -5), S(-9, -9),  S(-14, -3), S(1, -3),   S(9, -17),  S(19, -20), S(10, -22), S(-53, 2),
     S(-3, -7),  S(1, -5),   S(5, -3),   S(14, -12), S(12, -15), S(13, -16), S(-19, -6), S(-1, -28)},
    // Queen PST
    {S(-25, -26), S(-54, 59), S(-12, 33), S(-21, 36), S(108, -33), S(75, -18),  S(36, 7),   S(47, 16),
     S(-35, -24), S(-63, 14), S(-27, 28), S(-32, 62), S(-77, 109), S(45, 16),   S(11, 28),  S(55, -8),
     S(-5, -42),  S(-23, -8), S(2, -26),  S(-28, 64), S(21, 44),   S(65, 14),   S(59, 2),   S(61, 4),
     S(-43, 16),  S(-24, 1),  S(-32, 12), S(-28, 34), S(-17, 65),  S(7, 42),    S(-10, 93), S(3, 55),
     S(-3, -39),  S(-39, 29), S(-3, -2),  S(-19, 40), S(-6, 19),   S(-5, 33),   S(-5, 59),  S(-5, 49),
     S(-16, -13), S(8, -52),  S(-9, -6),  S(6, -20),  S(-1, -9),   S(5, 15),    S(8, 27),   S(3, 30),
     S(-22, -24), S(1, -44),  S(19, -53), S(16, -44), S(30, -54),  S(22, -50),  S(7, -62),  S(16, -47),
     S(8, -51),   S(11, -65), S(10, -52), S(19, -56), S(4, -33),   S(-17, -36), S(4, -65),  S(-48, -52)},
    // King PST
    {S(-133, -84), S(151, -82), S(145, -60), S(95, -53), S(-101, 8),  S(-56, 27),  S(89, -25), S(86, -58),
     S(172, -68),  S(82, 6),    S(41, 17),   S(106, 7),  S(29, 24),   S(36, 45),   S(17, 25),  S(-118, 38),
     S(77, -15),   S(64, 19),   S(88, 26),   S(-15, 43), S(27, 36),   S(100, 50),  S(121, 36), S(7, 3),
     S(3, -24),    S(-1, 31),   S(5, 46),    S(-42, 70), S(-40, 62),  S(-39, 60),  S(-3, 34),  S(-61, 3),
     S(-46, -32),  S(19, -8),   S(-50, 47),  S(-97, 70), S(-115, 74), S(-71, 44),  S(-51, 16), S(-69, -16),
     S(4, -41),    S(1, -10),   S(-42, 28),  S(-69, 47), S(-70, 49),  S(-61, 32),  S(-16, 5),  S(-38, -17),
     S(4, -53),    S(19, -26),  S(-15, 8),   S(-59, 26), S(-43, 23),  S(-29, 9),   S(17, -18), S(15, -44),
     S(-20, -95),  S(44, -70),  S(19, -39),  S(-51, -8), S(6, -41),   S(-40, -15), S(35, -54), S(22, -88)},
};
const int mobility[5][28] = {
    {S(-41, -65), S(-22, -15), S(-12, 4), S(-7, 12), S(4, 15), S(9, 23), S(17, 20), S(22, 19), S(39, -2), S(0, 0),
     S(0, 0),     S(0, 0),     S(0, 0),   S(0, 0),   S(0, 0),  S(0, 0),  S(0, 0),   S(0, 0),   S(0, 0),   S(0, 0),
     S(0, 0),     S(0, 0),     S(0, 0),   S(0, 0),   S(0, 0),  S(0, 0),  S(0, 0),   S(0, 0)},
    {S(-47, -68), S(-32, -43), S(-20, -26), S(-12, -10), S(-5, 1), S(0, 9), S(4, 17), S(5, 19), S(8, 24), S(14, 19),
     S(27, 12),   S(39, 11),   S(-11, 41),  S(47, 6),    S(0, 0),  S(0, 0), S(0, 0),  S(0, 0),  S(0, 0),  S(0, 0),
     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),  S(0, 0), S(0, 0),  S(0, 0)},
    {S(-34, -72), S(-23, -45), S(-21, -18), S(-15, -14), S(-15, -6), S(-9, 5), S(-6, 14), S(-1, 12), S(9, 14), S(9, 18),
     S(18, 18),   S(23, 23),   S(28, 25),   S(28, 22),   S(28, 22),  S(0, 0),  S(0, 0),   S(0, 0),   S(0, 0),  S(0, 0),
     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),     S(0, 0),    S(0, 0),  S(0, 0),   S(0, 0)},
    {S(-60, -38), S(-62, -65), S(-60, -87), S(-61, -76), S(-55, -77), S(-52, -58),  S(-53, -34),
     S(-53, -12), S(-48, -9),  S(-46, 7),   S(-43, 18),  S(-40, 26),  S(-41, 38),   S(-32, 37),
     S(-31, 49),  S(-30, 59),  S(-30, 71),  S(-8, 42),   S(-15, 68),  S(12, 54),    S(4, 66),
     S(43, 39),   S(13, 70),   S(82, 39),   S(35, 59),   S(130, -8),  S(245, -102), S(287, -145)},
    {S(59, -12), S(51, 13),  S(46, 10),   S(39, 11),  S(37, 1),    S(34, 4),   S(32, 1),
     S(24, -4),  S(17, 11),  S(10, 12),   S(-7, 18),  S(-21, 23),  S(-16, 19), S(-30, 22),
     S(-31, 21), S(-45, 23), S(-37, 18),  S(-45, 19), S(-33, 11),  S(-28, 7),  S(-4, -5),
     S(-19, -9), S(10, -21), S(-33, -23), S(36, -42), S(-16, -33), S(2, -52),  S(-33, -40)},
};

const int open_file[3]        = {S(51, -2), S(-9, 23), S(-56, 3)};
const int semi_open_file[3]   = {S(11, 12), S(-5, 19), S(-25, 16)};
const int attacked_by_pawn[2] = {S(-67, -60), S(-52, -14)};

const int bishop_pair = S(25, 63);